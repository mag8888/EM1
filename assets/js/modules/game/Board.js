/**
 * Board - –º–æ–¥—É–ª—å –∏–≥—Ä–æ–≤–æ–π –¥–æ—Å–∫–∏
 */
class Board {
    constructor() {
        this.cells = [];
        this.players = [];
        this.currentPlayer = null;
        this.eventBus = null;
        this.state = null;
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è
     */
    async init() {
        console.log('üéØ Initializing Board module...');
        
        // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—â–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        this.eventBus = window.gameCore?.eventBus;
        this.state = window.gameCore?.state;
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —è—á–µ–π–∫–∏ –¥–æ—Å–∫–∏
        this.initializeCells();
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è
        this.setupEvents();
        
        console.log('‚úÖ Board module initialized');
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —è—á–µ–µ–∫ –¥–æ—Å–∫–∏
     */
    initializeCells() {
        this.cells = Array.from({ length: 44 }, (_, index) => ({
            id: index + 1,
            type: this.getCellType(index + 1),
            color: this.getCellColor(index + 1),
            icon: this.getCellIcon(index + 1),
            name: this.getCellName(index + 1),
            description: this.getCellDescription(index + 1),
            players: []
        }));
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∏–ø–∞ —è—á–µ–π–∫–∏
     */
    getCellType(cellId) {
        const types = {
            1: 'start',
            2: 'dream',
            6: 'dream',
            14: 'dream',
            16: 'dream',
            20: 'dream',
            22: 'dream',
            26: 'dream',
            27: 'dream',
            28: 'dream',
            30: 'dream',
            32: 'dream',
            36: 'dream',
            38: 'dream',
            40: 'dream',
            42: 'dream',
            44: 'dream'
        };
        
        return types[cellId] || 'regular';
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ —è—á–µ–π–∫–∏
     */
    getCellColor(cellId) {
        const colors = {
            1: 'gold',
            2: 'pink', 6: 'teal', 14: 'purple', 16: 'orange', 20: 'yellow',
            22: 'blue', 26: 'red', 27: 'green', 28: 'purple', 30: 'blue',
            32: 'orange', 36: 'red', 38: 'green', 40: 'purple', 42: 'blue', 44: 'gold'
        };
        
        return colors[cellId] || 'slate';
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ —è—á–µ–π–∫–∏
     */
    getCellIcon(cellId) {
        const icons = {
            1: 'üéØ',
            2: 'üè†', 6: 'üßä', 14: 'üèîÔ∏è', 16: 'üìö', 20: '‚õµ',
            22: 'üé™', 26: 'üïØÔ∏è', 27: 'üé≠', 28: '‚õµ', 30: '‚õµ',
            32: '‚úàÔ∏è', 36: 'üèéÔ∏è', 38: 'üé¨', 40: 'üëë', 42: '‚õµ', 44: 'üöÄ'
        };
        
        return icons[cellId] || 'üí∞';
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —è—á–µ–π–∫–∏
     */
    getCellName(cellId) {
        const names = {
            1: '–°—Ç–∞—Ä—Ç',
            2: '–î–æ–º –º–µ—á—Ç—ã', 6: '–ê–Ω—Ç–∞—Ä–∫—Ç–∏–¥–∞', 14: '–í—ã—Å–æ—á–∞–π—à–∏–µ –≤–µ—Ä—à–∏–Ω—ã', 16: '–ö–Ω–∏–≥–∞-–±–µ—Å—Ç—Å–µ–ª–ª–µ—Ä', 20: '–Ø—Ö—Ç–∞ –≤ –°—Ä–µ–¥–∏–∑–µ–º–Ω–æ–º –º–æ—Ä–µ',
            22: '–ú–∏—Ä–æ–≤–æ–π —Ñ–µ—Å—Ç–∏–≤–∞–ª—å', 26: '–†–µ—Ç—Ä–∏—Ç-—Ü–µ–Ω—Ç—Ä', 27: '–§–æ–Ω–¥ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ç–∞–ª–∞–Ω—Ç–æ–≤', 28: '–ö—Ä—É–≥–æ—Å–≤–µ—Ç–Ω–æ–µ –ø–ª–∞–≤–∞–Ω–∏–µ', 30: '–ö—Ä—É–≥–æ—Å–≤–µ—Ç–Ω–æ–µ –ø–ª–∞–≤–∞–Ω–∏–µ 2',
            32: '–ß–∞—Å—Ç–Ω—ã–π —Å–∞–º–æ–ª—ë—Ç', 36: '–ö–æ–ª–ª–µ–∫—Ü–∏—è —Å—É–ø–µ—Ä–∫–∞—Ä–æ–≤', 38: '–ü–æ–ª–Ω–æ–º–µ—Ç—Ä–∞–∂–Ω—ã–π —Ñ–∏–ª—å–º', 40: '–ú–∏—Ä–æ–≤–æ–π –ª–∏–¥–µ—Ä –º–Ω–µ–Ω–∏–π', 42: '–ë–µ–ª–æ—Å–Ω–µ–∂–Ω–∞—è —è—Ö—Ç–∞', 44: '–ü–æ–ª—ë—Ç –≤ –∫–æ—Å–º–æ—Å'
        };
        
        return names[cellId] || `–Ø—á–µ–π–∫–∞ ${cellId}`;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è —è—á–µ–π–∫–∏
     */
    getCellDescription(cellId) {
        const descriptions = {
            1: '–ù–∞—á–∞–ª–æ –∏–≥—Ä—ã',
            2: '–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –¥–æ–º –º–µ—á—Ç—ã –¥–ª—è —Å–µ–º—å–∏', 6: '–ü–æ—Å–µ—Ç–∏—Ç—å –ê–Ω—Ç–∞—Ä–∫—Ç–∏–¥—É', 14: '–ü–æ–¥–Ω—è—Ç—å—Å—è –Ω–∞ –≤—Å–µ –≤—ã—Å–æ—á–∞–π—à–∏–µ –≤–µ—Ä—à–∏–Ω—ã –º–∏—Ä–∞', 16: '–°—Ç–∞—Ç—å –∞–≤—Ç–æ—Ä–æ–º –∫–Ω–∏–≥–∏-–±–µ—Å—Ç—Å–µ–ª–ª–µ—Ä–∞', 20: '–ñ–∏—Ç—å –≥–æ–¥ –Ω–∞ —è—Ö—Ç–µ –≤ –°—Ä–µ–¥–∏–∑–µ–º–Ω–æ–º –º–æ—Ä–µ',
            22: '–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –º–∏—Ä–æ–≤–æ–π —Ñ–µ—Å—Ç–∏–≤–∞–ª—å', 26: '–ü–æ—Å—Ç—Ä–æ–∏—Ç—å —Ä–µ—Ç—Ä–∏—Ç-—Ü–µ–Ω—Ç—Ä', 27: '–°–æ–∑–¥–∞—Ç—å —Ñ–æ–Ω–¥ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ç–∞–ª–∞–Ω—Ç–æ–≤', 28: '–ö—Ä—É–≥–æ—Å–≤–µ—Ç–Ω–æ–µ –ø–ª–∞–≤–∞–Ω–∏–µ –Ω–∞ –ø–∞—Ä—É—Å–Ω–∏–∫–µ', 30: '–ö—Ä—É–≥–æ—Å–≤–µ—Ç–Ω–æ–µ –ø–ª–∞–≤–∞–Ω–∏–µ –Ω–∞ –ø–∞—Ä—É—Å–Ω–∏–∫–µ',
            32: '–ö—É–ø–∏—Ç—å —á–∞—Å—Ç–Ω—ã–π —Å–∞–º–æ–ª—ë—Ç', 36: '–ö—É–ø–∏—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é —Å—É–ø–µ—Ä–∫–∞—Ä–æ–≤', 38: '–°–Ω—è—Ç—å –ø–æ–ª–Ω–æ–º–µ—Ç—Ä–∞–∂–Ω—ã–π —Ñ–∏–ª—å–º', 40: '–°—Ç–∞—Ç—å –º–∏—Ä–æ–≤—ã–º –ª–∏–¥–µ—Ä–æ–º –º–Ω–µ–Ω–∏–π', 42: '–ë–µ–ª–æ—Å–Ω–µ–∂–Ω–∞—è –Ø—Ö—Ç–∞', 44: '–ü–æ–ª—ë—Ç –≤ –∫–æ—Å–º–æ—Å'
        };
        
        return descriptions[cellId] || '';
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–±—ã—Ç–∏–π
     */
    setupEvents() {
        if (this.eventBus) {
            this.eventBus.on('playerMoved', this.onPlayerMoved.bind(this));
            this.eventBus.on('gameStarted', this.onGameStarted.bind(this));
            this.eventBus.on('gameStopped', this.onGameStopped.bind(this));
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞
     */
    onPlayerMoved(player, fromPosition, toPosition) {
        console.log(`üë§ Player ${player.name} moved from ${fromPosition} to ${toPosition}`);
        
        // –£–±–∏—Ä–∞–µ–º –∏–≥—Ä–æ–∫–∞ —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–π –ø–æ–∑–∏—Ü–∏–∏
        this.removePlayerFromCell(fromPosition, player.id);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞ –Ω–∞ –Ω–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é
        this.addPlayerToCell(toPosition, player);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º UI
        this.updateBoardUI();
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
     */
    onGameStarted() {
        console.log('üéÆ Game started - initializing board');
        this.updateBoardUI();
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏–≥—Ä—ã
     */
    onGameStopped() {
        console.log('üõë Game stopped - clearing board');
        this.clearBoard();
    }

    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ –Ω–∞ —è—á–µ–π–∫—É
     */
    addPlayerToCell(cellId, player) {
        const cell = this.cells.find(c => c.id === cellId);
        if (cell) {
            cell.players.push(player);
        }
    }

    /**
     * –£–¥–∞–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ —Å —è—á–µ–π–∫–∏
     */
    removePlayerFromCell(cellId, playerId) {
        const cell = this.cells.find(c => c.id === cellId);
        if (cell) {
            cell.players = cell.players.filter(p => p.id !== playerId);
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —è—á–µ–π–∫–∏ –ø–æ ID
     */
    getCell(cellId) {
        return this.cells.find(c => c.id === cellId);
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —è—á–µ–µ–∫
     */
    getAllCells() {
        return this.cells;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —è—á–µ–µ–∫ –ø–æ —Ç–∏–ø—É
     */
    getCellsByType(type) {
        return this.cells.filter(c => c.type === type);
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –¥–æ—Å–∫–∏
     */
    updateBoardUI() {
        // –≠–º–∏—Ç–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI
        if (this.eventBus) {
            this.eventBus.emit('boardUpdated', this.cells);
        }
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ –¥–æ—Å–∫–∏
     */
    clearBoard() {
        this.cells.forEach(cell => {
            cell.players = [];
        });
        this.updateBoardUI();
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å–∫–µ
     */
    getBoardInfo() {
        return {
            totalCells: this.cells.length,
            dreamCells: this.getCellsByType('dream').length,
            regularCells: this.getCellsByType('regular').length,
            players: this.players.length
        };
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –≤ window –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
window.Board = Board;
