// UI –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç –∏ –æ—Ç–±–æ—è
// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–ª–æ–¥—ã, –æ—Ç–±–æ–π –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–∞—Ä—Ç

class CardUI {
    constructor(cardManager) {
        this.cardManager = cardManager;
        this.container = null;
        this.init();
    }
    
    init() {
        this.createContainer();
        this.render();
    }
    
    // –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –∫–∞—Ä—Ç
    createContainer() {
        // –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
        this.container = document.getElementById('cardUI');
        if (!this.container) {
            this.container = document.createElement('div');
            this.container.id = 'cardUI';
            this.container.className = 'card-ui';
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≤ sidebar –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—É—é –ø–∞–Ω–µ–ª—å
            const sidebar = document.querySelector('.sidebar') || document.body;
            sidebar.appendChild(this.container);
        }
    }
    
    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ UI –∫–∞—Ä—Ç
    render() {
        if (!this.container) return;
        
        const stats = this.cardManager.getStats();
        
        this.container.innerHTML = `
            <div class="card-ui-header">
                <h3>üÉè –ö–∞—Ä—Ç—ã</h3>
                <button class="btn btn-sm" onclick="cardUI.refresh()">üîÑ –û–±–Ω–æ–≤–∏—Ç—å</button>
            </div>
            
            <div class="card-decks">
                <div class="card-deck" data-type="bigDeal">
                    <div class="deck-header">
                        <span class="deck-icon">üíº</span>
                        <span class="deck-name">–ë–æ–ª—å—à–∏–µ —Å–¥–µ–ª–∫–∏</span>
                    </div>
                    <div class="deck-stats">
                        <span class="remaining">${stats.bigDeal.remaining}</span>
                        <span class="separator">/</span>
                        <span class="total">${stats.bigDeal.total}</span>
                    </div>
                    <div class="deck-actions">
                        <button class="btn btn-sm" onclick="cardUI.drawCard('bigDeal')">–í–∑—è—Ç—å</button>
                    </div>
                </div>
                
                <div class="card-deck" data-type="smallDeal">
                    <div class="deck-header">
                        <span class="deck-icon">üì¶</span>
                        <span class="deck-name">–ú–∞–ª—ã–µ —Å–¥–µ–ª–∫–∏</span>
                    </div>
                    <div class="deck-stats">
                        <span class="remaining">${stats.smallDeal.remaining}</span>
                        <span class="separator">/</span>
                        <span class="total">${stats.smallDeal.total}</span>
                    </div>
                    <div class="deck-actions">
                        <button class="btn btn-sm" onclick="cardUI.drawCard('smallDeal')">–í–∑—è—Ç—å</button>
                    </div>
                </div>
                
                <div class="card-deck" data-type="expenses">
                    <div class="deck-header">
                        <span class="deck-icon">üí≥</span>
                        <span class="deck-name">–†–∞—Å—Ö–æ–¥—ã</span>
                    </div>
                    <div class="deck-stats">
                        <span class="remaining">${stats.expenses.remaining}</span>
                        <span class="separator">/</span>
                        <span class="total">${stats.expenses.total}</span>
                    </div>
                    <div class="deck-actions">
                        <button class="btn btn-sm" onclick="cardUI.drawCard('expenses')">–í–∑—è—Ç—å</button>
                    </div>
                </div>
                
                <div class="card-deck" data-type="market">
                    <div class="deck-header">
                        <span class="deck-icon">üõí</span>
                        <span class="deck-name">–†—ã–Ω–æ–∫</span>
                    </div>
                    <div class="deck-stats">
                        <span class="remaining">${stats.market.remaining}</span>
                        <span class="separator">/</span>
                        <span class="total">${stats.market.total}</span>
                    </div>
                    <div class="deck-actions">
                        <button class="btn btn-sm" onclick="cardUI.drawCard('market')">–í–∑—è—Ç—å</button>
                    </div>
                </div>
            </div>
            
            <div class="discard-piles">
                <h4>üóëÔ∏è –û—Ç–±–æ–π</h4>
                <div class="discard-stats">
                    <div class="discard-item">
                        <span class="discard-name">–ë–æ–ª—å—à–∏–µ —Å–¥–µ–ª–∫–∏:</span>
                        <span class="discard-count">${stats.bigDeal.discarded}</span>
                    </div>
                    <div class="discard-item">
                        <span class="discard-name">–ú–∞–ª—ã–µ —Å–¥–µ–ª–∫–∏:</span>
                        <span class="discard-count">${stats.smallDeal.discarded}</span>
                    </div>
                    <div class="discard-item">
                        <span class="discard-name">–†–∞—Å—Ö–æ–¥—ã:</span>
                        <span class="discard-count">${stats.expenses.discarded}</span>
                    </div>
                    <div class="discard-item">
                        <span class="discard-name">–†—ã–Ω–æ–∫:</span>
                        <span class="discard-count">${stats.market.discarded}</span>
                    </div>
                </div>
            </div>
        `;
    }
    
    // –í–∑—è—Ç–∏–µ –∫–∞—Ä—Ç—ã
    drawCard(deckType) {
        const card = this.cardManager.drawCard(deckType);
        if (card) {
            this.showCard(card);
            this.render(); // –û–±–Ω–æ–≤–ª—è–µ–º UI
        } else {
            console.warn(`‚ö†Ô∏è CardUI: No cards available in ${deckType} deck`);
        }
    }
    
    // –ü–æ–∫–∞–∑ –∫–∞—Ä—Ç—ã
    showCard(card) {
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø–æ–∫–∞–∑–∞ –∫–∞—Ä—Ç—ã
        const modal = document.createElement('div');
        modal.className = 'card-modal';
        modal.innerHTML = `
            <div class="card-modal-content">
                <div class="card-modal-header">
                    <h3>${card.name}</h3>
                    <button class="card-modal-close" onclick="this.closest('.card-modal').remove()">√ó</button>
                </div>
                <div class="card-modal-body">
                    <div class="card-icon">${card.icon}</div>
                    <div class="card-description">${card.description}</div>
                    ${card.cost ? `<div class="card-cost">–°—Ç–æ–∏–º–æ—Å—Ç—å: $${card.cost.toLocaleString()}</div>` : ''}
                    ${card.income ? `<div class="card-income">–î–æ—Ö–æ–¥: $${card.income.toLocaleString()}</div>` : ''}
                </div>
                <div class="card-modal-actions">
                    <button class="btn btn-primary" onclick="cardUI.useCard('${card.id}')">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å</button>
                    <button class="btn btn-secondary" onclick="cardUI.discardCard('${card.id}')">–í –æ—Ç–±–æ–π</button>
                </div>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            modal.classList.add('show');
        }, 10);
    }
    
    // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
    useCard(cardId) {
        // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã
        console.log(`üéØ CardUI: Using card ${cardId}`);
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const modal = document.querySelector('.card-modal');
        if (modal) {
            modal.remove();
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º UI
        this.render();
    }
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Ä—Ç—ã –≤ –æ—Ç–±–æ–π
    discardCard(cardId) {
        // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ä—Ç—ã –≤ –æ—Ç–±–æ–π
        console.log(`üóëÔ∏è CardUI: Discarding card ${cardId}`);
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const modal = document.querySelector('.card-modal');
        if (modal) {
            modal.remove();
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º UI
        this.render();
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
    refresh() {
        this.render();
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = CardUI;
} else if (typeof window !== 'undefined') {
    window.CardUI = CardUI;
}
