/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ç–∞–ª–æ–≥–∞ –∞–∫—Ç–∏–≤–æ–≤ –∏–≥—Ä–æ–∫–∞
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –∫—É–ø–ª–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã –∏ –∞–∫—Ç–∏–≤—ã
 */

export class AssetsCatalog {
    constructor(cardModule) {
        this.cardModule = cardModule;
        this.currentPlayerId = null;
        this.isVisible = false;
    }

    /**
     * –ü–æ–∫–∞–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ –∞–∫—Ç–∏–≤–æ–≤
     */
    show(playerId) {
        this.currentPlayerId = playerId;
        this.isVisible = true;
        
        const assets = this.cardModule.getPlayerAssets(playerId);
        this.createCatalogModal(assets);
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∫–∞—Ç–∞–ª–æ–≥–∞
     */
    createCatalogModal(assets) {
        // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–∞—Ç–∞–ª–æ–≥
        const existing = document.querySelector('.assets-catalog-modal');
        if (existing) {
            existing.remove();
        }

        const modal = document.createElement('div');
        modal.className = 'assets-catalog-modal';
        modal.innerHTML = `
            <div class="modal-overlay">
                <div class="modal-content">
                    <div class="catalog-header">
                        <h3>–ú–æ–∏ –∞–∫—Ç–∏–≤—ã</h3>
                        <button class="close-btn" onclick="window.assetsCatalog.hide()">√ó</button>
                    </div>
                    
                    <div class="catalog-stats">
                        <div class="stat-item">
                            <span class="stat-label">–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–æ–≤:</span>
                            <span class="stat-value">${assets.length}</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-label">–û–±—â–∏–π –¥–æ—Ö–æ–¥:</span>
                            <span class="stat-value">$${this.calculateTotalIncome(assets).toLocaleString()}/–º–µ—Å</span>
                        </div>
                    </div>
                    
                    <div class="assets-grid">
                        ${assets.length > 0 ? this.renderAssetsGrid(assets) : this.renderEmptyState()}
                    </div>
                </div>
            </div>
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
        const style = document.createElement('style');
        style.textContent = `
            .assets-catalog-modal {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                z-index: 10000;
            }
            
            .modal-overlay {
                position: relative;
                width: 100%;
                height: 100%;
                background: rgba(0, 0, 0, 0.8);
                display: flex;
                align-items: center;
                justify-content: center;
                padding: 20px;
            }
            
            .modal-content {
                background: white;
                border-radius: 15px;
                max-width: 800px;
                width: 100%;
                max-height: 80vh;
                overflow-y: auto;
            }
            
            .catalog-header {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding: 20px;
                border-bottom: 1px solid #eee;
            }
            
            .catalog-header h3 {
                margin: 0;
                color: #333;
            }
            
            .close-btn {
                background: none;
                border: none;
                font-size: 24px;
                cursor: pointer;
                color: #666;
                padding: 0;
                width: 30px;
                height: 30px;
                display: flex;
                align-items: center;
                justify-content: center;
            }
            
            .catalog-stats {
                display: flex;
                gap: 20px;
                padding: 20px;
                background: #f8f9fa;
                border-bottom: 1px solid #eee;
            }
            
            .stat-item {
                display: flex;
                flex-direction: column;
                align-items: center;
            }
            
            .stat-label {
                font-size: 0.9rem;
                color: #666;
                margin-bottom: 5px;
            }
            
            .stat-value {
                font-size: 1.2rem;
                font-weight: bold;
                color: #333;
            }
            
            .assets-grid {
                padding: 20px;
                display: grid;
                grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
                gap: 15px;
            }
            
            .asset-card {
                border: 1px solid #ddd;
                border-radius: 10px;
                padding: 15px;
                background: white;
                transition: all 0.3s ease;
                position: relative;
            }
            
            .asset-card:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            }
            
            .asset-header {
                display: flex;
                align-items: center;
                margin-bottom: 10px;
            }
            
            .asset-icon {
                font-size: 1.5rem;
                margin-right: 10px;
            }
            
            .asset-name {
                font-weight: bold;
                color: #333;
                flex: 1;
            }
            
            .asset-type {
                font-size: 0.8rem;
                color: #666;
                text-transform: uppercase;
                letter-spacing: 0.5px;
            }
            
            .asset-details {
                font-size: 0.9rem;
                color: #666;
            }
            
            .asset-detail-row {
                display: flex;
                justify-content: space-between;
                margin-bottom: 5px;
            }
            
            .asset-detail-label {
                font-weight: 500;
            }
            
            .asset-detail-value {
                color: #333;
            }
            
            .asset-income {
                background: #e8f5e8;
                color: #2e7d32;
                padding: 5px 10px;
                border-radius: 15px;
                font-weight: bold;
                text-align: center;
                margin-top: 10px;
            }
            
            .empty-state {
                text-align: center;
                padding: 40px;
                color: #666;
            }
            
            .empty-icon {
                font-size: 3rem;
                margin-bottom: 15px;
            }
            
            .empty-title {
                font-size: 1.2rem;
                font-weight: bold;
                margin-bottom: 10px;
            }
            
            .empty-description {
                font-size: 0.9rem;
                line-height: 1.4;
            }
        `;

        document.head.appendChild(style);
        document.body.appendChild(modal);
    }

    /**
     * –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å–µ—Ç–∫–∏ –∞–∫—Ç–∏–≤–æ–≤
     */
    renderAssetsGrid(assets) {
        return assets.map(asset => `
            <div class="asset-card" style="border-left: 4px solid ${asset.color}">
                <div class="asset-header">
                    <div class="asset-icon" style="color: ${asset.color}">${asset.icon}</div>
                    <div class="asset-name">${asset.name}</div>
                </div>
                
                <div class="asset-type">${this.getAssetTypeName(asset.type)}</div>
                
                <div class="asset-details">
                    <div class="asset-detail-row">
                        <span class="asset-detail-label">–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                        <span class="asset-detail-value">$${asset.cost.toLocaleString()}</span>
                    </div>
                    <div class="asset-detail-row">
                        <span class="asset-detail-label">–í–∑–Ω–æ—Å:</span>
                        <span class="asset-detail-value">$${asset.downPayment.toLocaleString()}</span>
                    </div>
                    <div class="asset-detail-row">
                        <span class="asset-detail-label">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span>
                        <span class="asset-detail-value">${this.getCategoryName(asset.category)}</span>
                    </div>
                </div>
                
                <div class="asset-income">
                    +$${asset.cashFlow.toLocaleString()}/–º–µ—Å
                </div>
            </div>
        `).join('');
    }

    /**
     * –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø—É—Å—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
     */
    renderEmptyState() {
        return `
            <div class="empty-state">
                <div class="empty-icon">üì¶</div>
                <div class="empty-title">–ù–µ—Ç –∞–∫—Ç–∏–≤–æ–≤</div>
                <div class="empty-description">
                    –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –∞–∫—Ç–∏–≤–æ–≤.<br>
                    –ü–æ–ø–∞–¥–∏—Ç–µ –Ω–∞ –∑–µ–ª–µ–Ω—ã–µ –∫–ª–µ—Ç–∫–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫—É–ø–∏—Ç—å –∞–∫—Ç–∏–≤—ã.
                </div>
            </div>
        `;
    }

    /**
     * –†–∞—Å—á–µ—Ç –æ–±—â–µ–≥–æ –¥–æ—Ö–æ–¥–∞
     */
    calculateTotalIncome(assets) {
        return assets.reduce((total, asset) => total + (asset.cashFlow || 0), 0);
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–∏–ø–∞ –∞–∫—Ç–∏–≤–∞
     */
    getAssetTypeName(type) {
        const typeNames = {
            'big_deal': '–ë–æ–ª—å—à–∞—è —Å–¥–µ–ª–∫–∞',
            'small_deal': '–ú–∞–ª–∞—è —Å–¥–µ–ª–∫–∞',
            'market': '–†—ã–Ω–æ–∫',
            'expense': '–†–∞—Å—Ö–æ–¥—ã'
        };
        return typeNames[type] || type;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    getCategoryName(category) {
        const categoryNames = {
            'real_estate': '–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å',
            'business': '–ë–∏–∑–Ω–µ—Å',
            'stocks': '–ê–∫—Ü–∏–∏',
            'bonds': '–û–±–ª–∏–≥–∞—Ü–∏–∏',
            'precious_metals': '–î—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–µ –º–µ—Ç–∞–ª–ª—ã',
            'crypto': '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞',
            'funds': '–§–æ–Ω–¥—ã',
            'home': '–î–æ–º',
            'health': '–ó–¥–æ—Ä–æ–≤—å–µ',
            'transport': '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
            'education': '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ'
        };
        return categoryNames[category] || category;
    }

    /**
     * –°–∫—Ä—ã—Ç–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞
     */
    hide() {
        this.isVisible = false;
        const modal = document.querySelector('.assets-catalog-modal');
        if (modal) {
            modal.remove();
        }
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
if (typeof window !== 'undefined') {
    window.assetsCatalog = new AssetsCatalog(window.cardModule);
}

export default AssetsCatalog;
