// UI –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞—Ä—Ç—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–π –≤ —Å—Ç–∏–ª–µ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞

class ProfessionUI {
    constructor(professionManager) {
        this.professionManager = professionManager;
        this.container = null;
        this.init();
    }
    
    init() {
        this.createContainer();
        this.render();
    }
    
    // –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
    createContainer() {
        // –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
        this.container = document.getElementById('professionUI');
        if (!this.container) {
            this.container = document.createElement('div');
            this.container.id = 'professionUI';
            this.container.className = 'profession-ui';
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≤ sidebar –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—É—é –ø–∞–Ω–µ–ª—å
            const sidebar = document.querySelector('.sidebar') || document.body;
            sidebar.appendChild(this.container);
        }
    }
    
    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ UI –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
    render() {
        if (!this.container) return;
        
        const professions = this.professionManager.getAllProfessions();
        
        this.container.innerHTML = `
            <div class="profession-ui-header">
                <h3>üíº –ü—Ä–æ—Ñ–µ—Å—Å–∏–∏</h3>
                <button class="btn btn-sm" onclick="professionUI.refresh()">üîÑ –û–±–Ω–æ–≤–∏—Ç—å</button>
            </div>
            
            <div class="profession-cards">
                ${professions.map(prof => this.renderProfessionCard(prof)).join('')}
            </div>
        `;
    }
    
    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–∞—Ä—Ç—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
    renderProfessionCard(profession) {
        return `
            <div class="profession-card" data-profession-id="${profession.id}">
                <div class="profession-header">
                    <div class="profession-icon">${profession.icon}</div>
                    <div class="profession-title">
                        <h4>${profession.name}</h4>
                        <p>${profession.description}</p>
                    </div>
                </div>
                
                <div class="financial-summary">
                    <div class="financial-row">
                        <div class="financial-item salary">
                            <div class="financial-value">$${profession.salary.toLocaleString()}</div>
                            <div class="financial-label">–ó–∞—Ä–ø–ª–∞—Ç–∞</div>
                        </div>
                        <div class="financial-item expenses">
                            <div class="financial-value">$${profession.expenses.toLocaleString()}</div>
                            <div class="financial-label">–†–∞—Å—Ö–æ–¥—ã</div>
                        </div>
                    </div>
                    <div class="financial-row cash-flow">
                        <div class="financial-value">$${profession.cashFlow.toLocaleString()}</div>
                        <div class="financial-label">–î–µ–Ω–µ–∂–Ω—ã–π –ø–æ—Ç–æ–∫</div>
                    </div>
                </div>
                
                <div class="expenses-details">
                    <div class="expense-item">
                        <span class="expense-label">–ù–∞–ª–æ–≥–∏:</span>
                        <span class="expense-value">$${profession.taxes.amount.toLocaleString()} (${profession.taxes.percentage}%)</span>
                    </div>
                    <div class="expense-item">
                        <span class="expense-label">–ü—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã:</span>
                        <span class="expense-value">$${profession.otherExpenses.toLocaleString()}</span>
                    </div>
                    ${profession.debts.map(debt => `
                        <div class="expense-item">
                            <span class="expense-label">${debt.name}:</span>
                            <span class="expense-value">$${debt.monthly.toLocaleString()}</span>
                            <span class="debt-principal">$${debt.principal.toLocaleString()} (—Ç–µ–ª–æ)</span>
                        </div>
                    `).join('')}
                </div>
                
                <div class="total-debt">
                    <span class="debt-label">–ò—Ç–æ–≥–æ —Ç–µ–ª–æ –∫—Ä–µ–¥–∏—Ç–æ–≤</span>
                    <span class="debt-total">$${profession.totalDebt.toLocaleString()}</span>
                </div>
                
                <div class="profession-actions">
                    <button class="btn btn-category" onclick="professionUI.selectProfession('${profession.id}')">
                        ${profession.category}
                    </button>
                    <button class="btn btn-difficulty" onclick="professionUI.showDetails('${profession.id}')">
                        ${profession.difficulty}
                    </button>
                </div>
            </div>
        `;
    }
    
    // –í—ã–±–æ—Ä –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
    selectProfession(professionId) {
        const profession = this.professionManager.getProfessionById(professionId);
        if (profession) {
            console.log('üéØ ProfessionUI: Selected profession:', profession.name);
            
            // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
            this.showProfessionModal(profession);
        }
    }
    
    // –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
    showDetails(professionId) {
        const profession = this.professionManager.getProfessionById(professionId);
        if (profession) {
            this.showProfessionModal(profession);
        }
    }
    
    // –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
    showProfessionModal(profession) {
        const modal = document.createElement('div');
        modal.className = 'profession-modal';
        modal.innerHTML = `
            <div class="profession-modal-content">
                <div class="profession-modal-header">
                    <h3>${profession.name}</h3>
                    <button class="profession-modal-close" onclick="this.closest('.profession-modal').remove()">√ó</button>
                </div>
                <div class="profession-modal-body">
                    <div class="profession-icon-large">${profession.icon}</div>
                    <div class="profession-description">${profession.description}</div>
                    
                    <div class="financial-breakdown">
                        <h4>–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
                        <div class="breakdown-item">
                            <span>–ó–∞—Ä–ø–ª–∞—Ç–∞:</span>
                            <span>$${profession.salary.toLocaleString()}</span>
                        </div>
                        <div class="breakdown-item">
                            <span>–†–∞—Å—Ö–æ–¥—ã:</span>
                            <span>$${profession.expenses.toLocaleString()}</span>
                        </div>
                        <div class="breakdown-item">
                            <span>–î–µ–Ω–µ–∂–Ω—ã–π –ø–æ—Ç–æ–∫:</span>
                            <span>$${profession.cashFlow.toLocaleString()}</span>
                        </div>
                        <div class="breakdown-item">
                            <span>–û–±—â–∏–π –¥–æ–ª–≥:</span>
                            <span>$${profession.totalDebt.toLocaleString()}</span>
                        </div>
                    </div>
                    
                    <div class="debt-breakdown">
                        <h4>–î–µ—Ç–∞–ª–∏ –¥–æ–ª–≥–æ–≤</h4>
                        ${profession.debts.map(debt => `
                            <div class="debt-item">
                                <span class="debt-name">${debt.name}</span>
                                <span class="debt-monthly">$${debt.monthly.toLocaleString()}/–º–µ—Å</span>
                                <span class="debt-principal">$${debt.principal.toLocaleString()}</span>
                            </div>
                        `).join('')}
                    </div>
                </div>
                <div class="profession-modal-actions">
                    <button class="btn btn-primary" onclick="professionUI.confirmSelection('${profession.id}')">–í—ã–±—Ä–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—é</button>
                    <button class="btn btn-secondary" onclick="this.closest('.profession-modal').remove()">–ó–∞–∫—Ä—ã—Ç—å</button>
                </div>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            modal.classList.add('show');
        }, 10);
    }
    
    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
    confirmSelection(professionId) {
        const profession = this.professionManager.getProfessionById(professionId);
        if (profession) {
            console.log('‚úÖ ProfessionUI: Profession selected:', profession.name);
            
            // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞
            // –ù–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            const modal = document.querySelector('.profession-modal');
            if (modal) {
                modal.remove();
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            this.showNotification(`–ü—Ä–æ—Ñ–µ—Å—Å–∏—è "${profession.name}" –≤—ã–±—Ä–∞–Ω–∞!`);
        }
    }
    
    // –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    showNotification(message) {
        const notification = document.createElement('div');
        notification.className = 'profession-notification';
        notification.textContent = message;
        
        document.body.appendChild(notification);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            notification.classList.add('show');
        }, 10);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            notification.classList.remove('show');
            setTimeout(() => {
                notification.remove();
            }, 300);
        }, 3000);
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
    refresh() {
        this.render();
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = ProfessionUI;
} else if (typeof window !== 'undefined') {
    window.ProfessionUI = ProfessionUI;
}

