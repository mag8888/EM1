/**
 * –ê–¥–∞–ø—Ç–µ—Ä –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ DataStore —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Ç–µ–∫—É—â–∏–º–∏ –º–æ–¥—É–ª—è–º–∏
 */
class DataStoreAdapter {
    constructor(dataStore) {
        this.dataStore = dataStore;
        this.setupCompatibility();
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –º–æ–¥—É–ª—è–º–∏
     */
    setupCompatibility() {
        // –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        this.updateGlobalVariables();
        
        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        this.dataStore.subscribe('balance', () => this.updateGlobalVariables());
        this.dataStore.subscribe('income', () => this.updateGlobalVariables());
        this.dataStore.subscribe('expenses', () => this.updateGlobalVariables());
        this.dataStore.subscribe('credit', () => this.updateGlobalVariables());
        this.dataStore.subscribe('payday', () => this.updateGlobalVariables());
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
     */
    updateGlobalVariables() {
        const data = this.dataStore.getAll();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        window.currentBalance = data.balance;
        window.monthlyIncome = data.income;
        window.monthlyExpenses = data.expenses;
        window.totalCredit = data.credit;
        window.creditPayment = data.expensesBreakdown.credit;
        window.expensesBreakdown = data.expensesBreakdown;
        
        console.log('üîÑ DataStoreAdapter: –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã', {
            currentBalance: window.currentBalance,
            monthlyIncome: window.monthlyIncome,
            monthlyExpenses: window.monthlyExpenses,
            totalCredit: window.totalCredit
        });
    }
    
    /**
     * –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ –º–æ–¥—É–ª—è
     */
    syncFromBankModule(bankData) {
        if (!bankData) return;
        
        console.log('üîÑ DataStoreAdapter: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∏–∑ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ –º–æ–¥—É–ª—è', bankData);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        this.dataStore.update({
            balance: bankData.balance || 0,
            income: bankData.income || 0,
            passiveIncome: bankData.passiveIncome || 0,
            expenses: bankData.expenses || 0,
            payday: bankData.payday || 0,
            credit: bankData.credit || 0,
            maxCredit: bankData.maxCredit || 0,
            transfers: bankData.transfers || []
        });
        
        // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        this.dataStore.calculateDerivedValues();
        
        console.log('üîÑ DataStoreAdapter: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞', this.dataStore.getAll());
    }
    
    /**
     * –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–µ—Ä–≤–µ—Ä–∞
     */
    syncFromServer(serverData) {
        if (!serverData) return;
        
        console.log('üîÑ DataStoreAdapter: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞', serverData);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞
        if (serverData.player) {
            this.dataStore.update({
                salary: serverData.player.profession?.salary || 0,
                passiveIncome: serverData.player.passiveIncome || 0,
                balance: serverData.player.cash || 0
            });
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫—Ä–µ–¥–∏—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        if (serverData.credit) {
            this.dataStore.updateCredit(serverData.credit.amount || 0);
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
        if (serverData.balance) {
            this.dataStore.updateBalance(serverData.balance.amount || 0);
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        if (serverData.financials) {
            this.dataStore.updateExpenses({
                base: serverData.financials.baseExpenses || 0,
                credit: serverData.financials.creditPenalty || 0,
                children: serverData.financials.childrenExpenses || 0
            });
        }
        
        // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        this.dataStore.calculateDerivedValues();
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ, —Å–æ–≤–º–µ—Å—Ç–∏–º–æ–º —Å –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –º–æ–¥—É–ª–µ–º
     */
    getBankModuleData() {
        const data = this.dataStore.getAll();
        
        return {
            balance: data.balance,
            income: data.income,
            passiveIncome: data.passiveIncome,
            expenses: data.expenses,
            payday: data.payday,
            credit: data.credit,
            maxCredit: data.maxCredit,
            freeCredit: data.freeCredit,
            transfers: data.transfers
        };
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ, —Å–æ–≤–º–µ—Å—Ç–∏–º–æ–º —Å PlayerSummary
     */
    getPlayerSummaryData() {
        const data = this.dataStore.getAll();
        
        return {
            balance: data.balance,
            income: data.income,
            passiveIncome: data.passiveIncome,
            expenses: data.expenses,
            payday: data.payday,
            credit: data.credit,
            maxCredit: data.maxCredit
        };
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ, —Å–æ–≤–º–µ—Å—Ç–∏–º–æ–º —Å integration.js
     */
    getIntegrationData() {
        const data = this.dataStore.getAll();
        
        return {
            balance: data.balance,
            income: data.income,
            expenses: data.expenses,
            credit: data.credit,
            payday: data.payday
        };
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤
     */
    updateUI() {
        const data = this.dataStore.getAll();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤–Ω–µ—à–Ω–µ–π –ø–∞–Ω–µ–ª–∏ –±–∞–Ω–∫–∞
        this.updateExternalPanel(data);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º PlayerSummary
        this.updatePlayerSummary(data);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–Ω–∫–æ–≤—Å–∫–∏–π –º–æ–¥—É–ª—å
        this.updateBankModule(data);
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–π –ø–∞–Ω–µ–ª–∏ –±–∞–Ω–∫–∞
     */
    updateExternalPanel(data) {
        const incomeEl = document.getElementById('incomeValue');
        const expenseEl = document.getElementById('expenseValue');
        const paydayEl = document.getElementById('paydayValue');
        const loanEl = document.getElementById('loanValue');
        const passiveIncomeEl = document.getElementById('passiveIncomeValue');
        
        if (incomeEl) {
            incomeEl.textContent = `$${data.income.toLocaleString()}`;
        }
        if (expenseEl) {
            expenseEl.textContent = `$${data.expenses.toLocaleString()}`;
        }
        if (paydayEl) {
            paydayEl.textContent = `$${data.payday.toLocaleString()}/–º–µ—Å`;
        }
        if (loanEl) {
            loanEl.textContent = `$${data.credit.toLocaleString()}`;
        }
        if (passiveIncomeEl) {
            passiveIncomeEl.textContent = `$${data.passiveIncome.toLocaleString()}`;
        }
        
        console.log('üé® DataStoreAdapter: –í–Ω–µ—à–Ω—è—è –ø–∞–Ω–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞', {
            income: data.income,
            expenses: data.expenses,
            payday: data.payday,
            credit: data.credit,
            passiveIncome: data.passiveIncome
        });
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ PlayerSummary
     */
    updatePlayerSummary(data) {
        // –ò—â–µ–º PlayerSummary –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –º–æ–¥—É–ª—è—Ö –∏–≥—Ä—ã
        if (window.gameState && window.gameState.modules) {
            const playerSummary = window.gameState.modules.find(module => 
                module.constructor.name === 'PlayerSummary'
            );
            if (playerSummary && typeof playerSummary.render === 'function') {
                playerSummary.render();
            }
        }
        
        console.log('üé® DataStoreAdapter: PlayerSummary –æ–±–Ω–æ–≤–ª–µ–Ω');
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ –º–æ–¥—É–ª—è
     */
    updateBankModule(data) {
        if (window.bankModuleV4 && typeof window.bankModuleV4.updateUI === 'function') {
            window.bankModuleV4.updateUI();
        }
        
        console.log('üé® DataStoreAdapter: –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –º–æ–¥—É–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω');
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –∏–≥—Ä–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
     */
    initialize(roomId, playerName, playerId) {
        this.dataStore.setGameInfo(roomId, playerName, playerId);
        this.dataStore.initialize();
        
        console.log('üöÄ DataStoreAdapter: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω', { roomId, playerName, playerId });
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
     */
    getDebugInfo() {
        return {
            dataStore: this.dataStore.getDebugInfo(),
            globalVariables: {
                currentBalance: window.currentBalance,
                monthlyIncome: window.monthlyIncome,
                monthlyExpenses: window.monthlyExpenses,
                totalCredit: window.totalCredit
            }
        };
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∞–¥–∞–ø—Ç–µ—Ä–∞
window.dataStoreAdapter = new DataStoreAdapter(window.dataStore);

console.log('üîÑ DataStoreAdapter: –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–æ–∑–¥–∞–Ω');

export default DataStoreAdapter;
