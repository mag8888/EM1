/**
 * –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ë–ê–ù–ö–û–í–°–ö–û–ì–û –ú–û–î–£–õ–Ø
 * –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ –º–æ–¥—É–ª—è –∫ table.html
 */

let bankModule;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ –º–æ–¥—É–ª—è
async function initBankModule() {
    try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–Ω–∫–æ–≤—Å–∫–∏–π –º–æ–¥—É–ª—å
        const script = document.createElement('script');
        script.src = 'bank-module/bank.js';
        script.onload = async () => {
            bankModule = new BankModule();
            await bankModule.init();
            console.log('‚úÖ Bank Module initialized successfully');
        };
        document.head.appendChild(script);
    } catch (error) {
        console.error('‚ùå Error initializing Bank Module:', error);
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏-–æ–±–µ—Ä—Ç–∫–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å table.html
async function loadBankData(forceUpdate = false) {
    if (bankModule) {
        await bankModule.loadBankData(forceUpdate);
    } else {
        console.warn('BankModule not initialized. Cannot load bank data.');
    }
}

function updateLocalBalance(amount, description = '') {
    if (bankModule) {
        const oldBalance = bankModule.currentBalance;
        bankModule.currentBalance += amount;
        bankModule.lastUpdateTime = Date.now();
        
        console.log(`üí∞ –õ–æ–∫–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞: ${oldBalance} ${amount > 0 ? '+' : ''}${amount} = ${bankModule.currentBalance} (${description})`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º UI
        bankModule.updateBankUI();
        
        return bankModule.currentBalance;
    } else {
        console.warn('BankModule not initialized. Cannot update local balance.');
        return 0;
    }
}

async function openBank() {
    if (bankModule) {
        await bankModule.openBank();
    } else {
        console.warn('BankModule not initialized. Cannot open bank.');
    }
}

function closeBankModal() {
    if (bankModule) {
        bankModule.closeBankModal();
    } else {
        console.warn('BankModule not initialized. Cannot close bank modal.');
    }
}

async function processTransfer() {
    if (bankModule) {
        await bankModule.processTransfer();
    } else {
        console.warn('BankModule not initialized. Cannot process transfer.');
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    initBankModule();
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.loadBankData = loadBankData;
window.updateLocalBalance = updateLocalBalance;
window.openBank = openBank;
window.closeBankModal = closeBankModal;
window.processTransfer = processTransfer;