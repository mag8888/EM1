#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB –¥–ª—è Telegram –±–æ—Ç–∞
 */

require('dotenv').config();
const Database = require('./database-mongodb');

async function testMongoDB() {
    console.log('üîÑ Testing MongoDB connection for Telegram Bot...');
    
    try {
        const db = new Database();
        const connected = await db.init();
        
        if (connected) {
            console.log('‚úÖ MongoDB connection successful!');
            
            // –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            console.log('üîÑ Testing user creation...');
            const testUser = await db.createUser({
                telegramId: 999999999,
                username: 'test_user',
                firstName: 'Test',
                lastName: 'User'
            });
            
            if (testUser) {
                console.log('‚úÖ User creation successful!');
                console.log('üìã Test user data:', {
                    id: testUser._id.toString(),
                    telegramId: testUser.telegramId,
                    username: testUser.username,
                    referralCode: testUser.referralCode
                });
            }
            
            // –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            console.log('üîÑ Testing user retrieval...');
            const retrievedUser = await db.getUser(999999999);
            
            if (retrievedUser) {
                console.log('‚úÖ User retrieval successful!');
            }
            
            console.log('üéâ All tests passed! MongoDB is ready for Telegram Bot.');
            
        } else {
            console.error('‚ùå MongoDB connection failed!');
            process.exit(1);
        }
        
    } catch (error) {
        console.error('‚ùå Test failed:', error.message);
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testMongoDB();
