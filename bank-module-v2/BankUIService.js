/**
 * –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –º–æ–¥—É–ª—å - UI –°–µ—Ä–≤–∏—Å
 * –£–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ–º–∏ UI –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏ –∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏
 */

class BankUIService {
    constructor() {
        console.log('üé® BankUIService: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI —Å–µ—Ä–≤–∏—Å–∞');
        this.animationQueue = [];
        this.isAnimating = false;
    }
    
    /**
     * –û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
     */
    updateBalanceDisplay(balance) {
        console.log('üí∞ BankUIService: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞', balance);
        
        const balanceElement = document.getElementById('currentBalance');
        if (balanceElement) {
            balanceElement.textContent = `$${balance.toLocaleString()}`;
            console.log('‚úÖ BankUIService: –ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª–µ–Ω –≤ UI');
        } else {
            console.warn('‚ö†Ô∏è BankUIService: –≠–ª–µ–º–µ–Ω—Ç –±–∞–ª–∞–Ω—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
    }
    
    /**
     * –û–±–Ω–æ–≤–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é —Å–≤–æ–¥–∫—É
     */
    updateFinancialSummary(data) {
        console.log('üìä BankUIService: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å–≤–æ–¥–∫–∏', data);
        
        const { totalIncome, totalExpenses, monthlyIncome, currentCredit, maxCredit } = data;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ—Ö–æ–¥—ã
        const totalIncomeEl = document.getElementById('totalIncome');
        if (totalIncomeEl) {
            totalIncomeEl.textContent = `$${totalIncome.toLocaleString()}`;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å—Ö–æ–¥—ã
        const totalExpensesEl = document.getElementById('totalExpenses');
        if (totalExpensesEl) {
            totalExpensesEl.textContent = `$${totalExpenses.toLocaleString()}`;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Å—è—á–Ω—ã–π –¥–æ—Ö–æ–¥
        const monthlyIncomeEl = document.getElementById('monthlyIncome');
        if (monthlyIncomeEl) {
            monthlyIncomeEl.textContent = `$${monthlyIncome.toLocaleString()}/–º–µ—Å`;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫—Ä–µ–¥–∏—Ç
        const currentCreditEl = document.getElementById('currentCredit');
        if (currentCreditEl) {
            currentCreditEl.textContent = `$${currentCredit.toLocaleString()}`;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫—Ä–µ–¥–∏—Ç
        const maxCreditEl = document.getElementById('maxCredit');
        if (maxCreditEl) {
            maxCreditEl.textContent = `$${maxCredit.toLocaleString()}`;
        }
        
        console.log('‚úÖ BankUIService: –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å–≤–æ–¥–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
    }
    
    /**
     * –û–±–Ω–æ–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–≤–æ–¥–æ–≤
     */
    updateTransfersHistory(transfers, currentPlayerIndex) {
        console.log('üìã BankUIService: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤', { 
            transfersCount: transfers.length, 
            currentPlayerIndex 
        });
        
        const historyContainer = document.getElementById('transfersHistory');
        if (!historyContainer) {
            console.warn('‚ö†Ô∏è BankUIService: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏—Å—Ç–æ—Ä–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
        const playerTransfers = transfers.filter(transfer => 
            transfer.sender_index === currentPlayerIndex || 
            transfer.recipient_index === currentPlayerIndex
        );
        
        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        historyContainer.innerHTML = '';
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã
        playerTransfers.forEach(transfer => {
            const transferElement = this.createTransferElement(transfer, currentPlayerIndex);
            historyContainer.appendChild(transferElement);
        });
        
        console.log(`‚úÖ BankUIService: –ò—Å—Ç–æ—Ä–∏—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ (${playerTransfers.length} –ø–µ—Ä–µ–≤–æ–¥–æ–≤)`);
    }
    
    /**
     * –°–æ–∑–¥–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç –ø–µ—Ä–µ–≤–æ–¥–∞
     */
    createTransferElement(transfer, currentPlayerIndex) {
        const isSender = transfer.sender_index === currentPlayerIndex;
        const isRecipient = transfer.recipient_index === currentPlayerIndex;
        
        const element = document.createElement('div');
        element.className = `transfer-item ${isSender ? 'sent' : 'received'}`;
        
        const amount = transfer.amount || 0;
        const sign = isSender ? '-' : '+';
        const color = isSender ? '#EF4444' : '#10B981';
        
        element.innerHTML = `
            <div class="transfer-amount" style="color: ${color}">
                ${sign}$${amount.toLocaleString()}
            </div>
            <div class="transfer-description">
                ${transfer.description || '–ü–µ—Ä–µ–≤–æ–¥'}
            </div>
            <div class="transfer-time">
                ${this.formatTransferTime(transfer.timestamp)}
            </div>
        `;
        
        return element;
    }
    
    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è –ø–µ—Ä–µ–≤–æ–¥–∞
     */
    formatTransferTime(timestamp) {
        const date = new Date(timestamp);
        const now = new Date();
        const diff = now - date;
        
        if (diff < 60000) { // –ú–µ–Ω—å—à–µ –º–∏–Ω—É—Ç—ã
            return '—Ç–æ–ª—å–∫–æ —á—Ç–æ';
        } else if (diff < 3600000) { // –ú–µ–Ω—å—à–µ —á–∞—Å–∞
            const minutes = Math.floor(diff / 60000);
            return `${minutes} –º–∏–Ω –Ω–∞–∑–∞–¥`;
        } else if (diff < 86400000) { // –ú–µ–Ω—å—à–µ –¥–Ω—è
            const hours = Math.floor(diff / 3600000);
            return `${hours} —á –Ω–∞–∑–∞–¥`;
        } else {
            return date.toLocaleDateString();
        }
    }
    
    /**
     * –ê–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
     */
    animateBalanceChange(oldBalance, newBalance) {
        console.log('üé¨ BankUIService: –ê–Ω–∏–º–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞', { oldBalance, newBalance });
        
        const balanceElement = document.getElementById('currentBalance');
        if (!balanceElement) return;
        
        const difference = newBalance - oldBalance;
        const isIncrease = difference > 0;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –∞–Ω–∏–º–∞—Ü–∏–∏
        balanceElement.classList.add('balance-changing');
        if (isIncrease) {
            balanceElement.classList.add('balance-increase');
        } else {
            balanceElement.classList.add('balance-decrease');
        }
        
        // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å—ã —á–µ—Ä–µ–∑ –≤—Ä–µ–º—è –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            balanceElement.classList.remove('balance-changing', 'balance-increase', 'balance-decrease');
        }, 1000);
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     */
    showNotification(message, type = 'info') {
        console.log('üîî BankUIService: –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', { message, type });
        
        // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const notification = document.createElement('div');
        notification.className = `notification notification-${type}`;
        notification.textContent = message;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        let container = document.getElementById('notificationsContainer');
        if (!container) {
            container = document.createElement('div');
            container.id = 'notificationsContainer';
            container.style.position = 'fixed';
            container.style.top = '20px';
            container.style.right = '20px';
            container.style.zIndex = '10000';
            document.body.appendChild(container);
        }
        
        container.appendChild(notification);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        setTimeout(() => notification.classList.add('show'), 100);
        
        // –£–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            notification.classList.remove('show');
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 300);
        }, 5000);
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
     */
    showLoadingIndicator(message = '–ó–∞–≥—Ä—É–∑–∫–∞...') {
        console.log('‚è≥ BankUIService: –ü–æ–∫–∞–∑ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏', message);
        
        let indicator = document.getElementById('loadingIndicator');
        if (!indicator) {
            indicator = document.createElement('div');
            indicator.id = 'loadingIndicator';
            indicator.className = 'loading-indicator';
            indicator.innerHTML = `
                <div class="loading-spinner"></div>
                <div>${message}</div>
            `;
            document.body.appendChild(indicator);
        }
        
        indicator.style.display = 'flex';
        const messageElement = indicator.querySelector('div:last-child');
        if (messageElement) {
            messageElement.textContent = message;
        }
    }
    
    /**
     * –°–∫—Ä—ã—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
     */
    hideLoadingIndicator() {
        console.log('‚úÖ BankUIService: –°–∫—Ä—ã—Ç–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏');
        
        const indicator = document.getElementById('loadingIndicator');
        if (indicator) {
            indicator.style.display = 'none';
        }
    }
    
    /**
     * –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
     */
    updateRecipientsList(players, currentPlayerIndex) {
        console.log('üë• BankUIService: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π', { 
            playersCount: players.length, 
            currentPlayerIndex 
        });
        
        const recipientSelect = document.getElementById('recipientSelect');
        if (!recipientSelect) {
            console.warn('‚ö†Ô∏è BankUIService: –°–µ–ª–µ–∫—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫
        recipientSelect.innerHTML = '';
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π (–∏—Å–∫–ª—é—á–∞—è —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞)
        players.forEach((player, index) => {
            if (index !== currentPlayerIndex) {
                const option = document.createElement('option');
                option.value = index;
                option.textContent = player.name || `–ò–≥—Ä–æ–∫ ${index + 1}`;
                recipientSelect.appendChild(option);
            }
        });
        
        console.log(`‚úÖ BankUIService: –°–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –æ–±–Ω–æ–≤–ª–µ–Ω (${recipientSelect.children.length} –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π)`);
    }
    
    /**
     * –°–±—Ä–æ—Å–∏—Ç—å —Ñ–æ—Ä–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
     */
    resetTransferForm() {
        console.log('üîÑ BankUIService: –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã –ø–µ—Ä–µ–≤–æ–¥–∞');
        
        const amountInput = document.getElementById('transferAmount');
        const recipientSelect = document.getElementById('recipientSelect');
        
        if (amountInput) amountInput.value = '';
        if (recipientSelect) recipientSelect.selectedIndex = 0;
    }
    
    /**
     * –í–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ä–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
     */
    validateTransferForm() {
        console.log('‚úÖ BankUIService: –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –ø–µ—Ä–µ–≤–æ–¥–∞');
        
        const amountInput = document.getElementById('transferAmount');
        const recipientSelect = document.getElementById('recipientSelect');
        
        if (!amountInput || !recipientSelect) {
            return { isValid: false, error: '–§–æ—Ä–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' };
        }
        
        const amount = parseFloat(amountInput.value);
        const recipientIndex = parseInt(recipientSelect.value);
        
        if (!amount || amount <= 0) {
            return { isValid: false, error: '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É' };
        }
        
        if (isNaN(recipientIndex) || recipientIndex < 0) {
            return { isValid: false, error: '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è' };
        }
        
        return { isValid: true, amount, recipientIndex };
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
if (typeof window !== 'undefined') {
    window.BankUIService = BankUIService;
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è Node.js
if (typeof module !== 'undefined' && module.exports) {
    module.exports = BankUIService;
}
