/**
 * –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –º–æ–¥—É–ª—å - –ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å
 * –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±–∞–Ω–∫–æ–≤—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã
 */

class BankModule {
    constructor() {
        console.log('üè¶ BankModule: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è');
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        this.core = new BankCore();
        this.apiService = new BankApiService();
        this.uiService = new BankUIService();
        
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥—É–ª—è
        this.isInitialized = false;
        this.updateInterval = null;
        this.incomingTransfersInterval = null;
        
        // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –º–µ—Ç–æ–¥–æ–≤
        this.handleStateChange = this.handleStateChange.bind(this);
        this.handleBalanceChange = this.handleBalanceChange.bind(this);
        this.handleTransferAdded = this.handleTransferAdded.bind(this);
        
        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è —è–¥—Ä–∞
        this.setupEventListeners();
        
        console.log('‚úÖ BankModule: –ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π
     */
    setupEventListeners() {
        console.log('üîó BankModule: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª–µ–π —Å–æ–±—ã—Ç–∏–π');
        
        this.core.on('stateChanged', this.handleStateChange);
        this.core.on('balanceChanged', this.handleBalanceChange);
        this.core.on('transferAdded', this.handleTransferAdded);
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
     */
    handleStateChange({ newState }) {
        console.log('üîÑ BankModule: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è', newState);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º UI –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        this.updateUI();
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
     */
    handleBalanceChange({ oldBalance, newBalance, source }) {
        console.log('üí∞ BankModule: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞', { 
            oldBalance, newBalance, source 
        });
        
        // –ê–Ω–∏–º–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
        this.uiService.animateBalanceChange(oldBalance, newBalance);
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞
     */
    handleTransferAdded(transfer) {
        console.log('üìù BankModule: –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞', transfer);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–≤–æ–¥–æ–≤
        this.updateTransfersHistory();
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª—å
     */
    async init() {
        if (this.isInitialized) {
            console.log('‚ö†Ô∏è BankModule: –ú–æ–¥—É–ª—å —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            return;
        }
        
        console.log('üöÄ BankModule: –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
        
        try {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            await this.loadInitialData();
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            this.setupPeriodicUpdates();
            
            this.isInitialized = true;
            console.log('‚úÖ BankModule: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
            
        } catch (error) {
            console.error('‚ùå BankModule: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
            throw error;
        }
    }
    
    /**
     * –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
     */
    async loadInitialData() {
        console.log('üìä BankModule: –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
        
        try {
            const roomId = this.getRoomId();
            const userId = this.getUserId();
            
            if (!roomId || !userId) {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –∫–æ–º–Ω–∞—Ç—ã –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            }
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã
            const roomData = await this.apiService.loadRoomData(roomId, userId);
            this.core.setRoomData(roomData);
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
            const playerIndex = this.getCurrentPlayerIndex(roomData);
            this.core.setCurrentPlayerIndex(playerIndex);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç—ã
            this.updateStateFromRoomData(roomData, playerIndex);
            
            console.log('‚úÖ BankModule: –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
            
        } catch (error) {
            console.error('‚ùå BankModule: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
            throw error;
        }
    }
    
    /**
     * –û–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç—ã
     */
    updateStateFromRoomData(roomData, playerIndex) {
        console.log('üîÑ BankModule: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç—ã', { 
            playerIndex, 
            hasGameData: !!roomData.game_data 
        });
        
        const gameData = roomData.game_data;
        if (!gameData) {
            console.warn('‚ö†Ô∏è BankModule: –î–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            return;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
        const balance = gameData.player_balances?.[playerIndex] || 0;
        this.core.updateBalance(balance, 'roomData');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        const financialData = this.extractFinancialData(roomData, playerIndex);
        this.core.setState({
            totalIncome: financialData.totalIncome,
            totalExpenses: financialData.totalExpenses,
            monthlyIncome: financialData.monthlyIncome,
            currentCredit: financialData.currentCredit,
            maxCredit: financialData.maxCredit
        });
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–≤–æ–¥–æ–≤
        const transfers = gameData.transfers_history || [];
        this.core.setState({ transfersHistory: transfers });
        
        console.log('‚úÖ BankModule: –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç—ã');
    }
    
    /**
     * –ò–∑–≤–ª–µ—á—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
     */
    extractFinancialData(roomData, playerIndex) {
        const player = roomData.players?.[playerIndex];
        const professionData = player?.profession_data;
        
        return {
            totalIncome: professionData?.salary || 0,
            totalExpenses: professionData?.expenses || 0,
            monthlyIncome: professionData?.cash_flow || professionData?.cashFlow || 0,
            currentCredit: professionData?.currentCredit || 0,
            maxCredit: this.calculateMaxCredit(professionData?.cash_flow || professionData?.cashFlow || 0)
        };
    }
    
    /**
     * –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫—Ä–µ–¥–∏—Ç
     */
    calculateMaxCredit(monthlyIncome) {
        return Math.floor(monthlyIncome / 100) * 1000;
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
     */
    setupPeriodicUpdates() {
        console.log('‚è∞ BankModule: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π');
        
        // –û—Å–Ω–æ–≤–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥
        this.updateInterval = setInterval(() => {
            this.loadBankData(false);
        }, 60000);
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
        this.incomingTransfersInterval = setInterval(() => {
            this.checkForIncomingTransfers();
        }, 5000);
        
        console.log('‚úÖ BankModule: –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }
    
    /**
     * –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –±–∞–Ω–∫–∞
     */
    async loadBankData(forceUpdate = false) {
        console.log('üìä BankModule: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –±–∞–Ω–∫–∞', { forceUpdate });
        
        try {
            const roomId = this.getRoomId();
            const userId = this.getUserId();
            
            if (!roomId || !userId) {
                console.warn('‚ö†Ô∏è BankModule: ID –∫–æ–º–Ω–∞—Ç—ã –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
                return;
            }
            
            const roomData = await this.apiService.loadRoomData(roomId, userId);
            const playerIndex = this.getCurrentPlayerIndex(roomData);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã
            this.core.setRoomData(roomData);
            this.core.setCurrentPlayerIndex(playerIndex);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if (forceUpdate || !this.core.state.hasLocalChanges) {
                this.updateStateFromRoomData(roomData, playerIndex);
            } else {
                console.log('üõ°Ô∏è BankModule: –õ–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ');
            }
            
            console.log('‚úÖ BankModule: –î–∞–Ω–Ω—ã–µ –±–∞–Ω–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
            
        } catch (error) {
            console.error('‚ùå BankModule: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –±–∞–Ω–∫–∞:', error);
        }
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Ö–æ–¥—è—â–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã
     */
    async checkForIncomingTransfers() {
        if (this.core.state.hasLocalChanges) {
            console.log('üõ°Ô∏è BankModule: –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤—Ö–æ–¥—è—â–∏—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ - –µ—Å—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è');
            return;
        }
        
        try {
            const roomId = this.getRoomId();
            const userId = this.getUserId();
            
            if (!roomId || !userId) return;
            
            const roomData = await this.apiService.loadRoomData(roomId, userId);
            const playerIndex = this.getCurrentPlayerIndex(roomData);
            const serverBalance = roomData.game_data?.player_balances?.[playerIndex] || 0;
            const currentBalance = this.core.state.currentBalance;
            
            if (serverBalance > currentBalance) {
                const difference = serverBalance - currentBalance;
                console.log('üí∞ BankModule: –ü–æ–ª—É—á–µ–Ω –≤—Ö–æ–¥—è—â–∏–π –ø–µ—Ä–µ–≤–æ–¥!', { 
                    difference, 
                    oldBalance: currentBalance, 
                    newBalance: serverBalance 
                });
                
                this.core.updateBalance(serverBalance, 'incomingTransfer');
                this.uiService.showNotification(`–ü–æ–ª—É—á–µ–Ω –ø–µ—Ä–µ–≤–æ–¥: +$${difference.toLocaleString()}`, 'success');
            }
            
        } catch (error) {
            console.error('‚ùå BankModule: –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤:', error);
        }
    }
    
    /**
     * –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥
     */
    async executeTransfer() {
        console.log('üí∏ BankModule: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞');
        
        try {
            // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ñ–æ—Ä–º—É
            const validation = this.uiService.validateTransferForm();
            if (!validation.isValid) {
                this.uiService.showNotification(validation.error, 'error');
                return;
            }
            
            const { amount, recipientIndex } = validation;
            const currentBalance = this.core.state.currentBalance;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤
            if (amount > currentBalance) {
                this.uiService.showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', 'error');
                return;
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            this.uiService.showLoadingIndicator('–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞...');
            this.core.setLoading(true);
            
            // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥
            const roomId = this.getRoomId();
            const userId = this.getUserId();
            
            try {
                await this.apiService.executeTransfer(roomId, userId, recipientIndex, amount);
            } catch (apiError) {
                const msg = apiError?.message || '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞';
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –¥–ª—è –∞—É–¥–∏—Ç–∞
                this.uiService.showNotification(`–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: ${msg}`, 'error');
                throw apiError;
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            const newBalance = currentBalance - amount;
            this.core.updateBalance(newBalance, 'outgoingTransfer');
            this.core.setLocalChanges(true);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–æ–¥ –≤ –∏—Å—Ç–æ—Ä–∏—é
            const transfer = {
                sender_index: this.core.currentPlayerIndex,
                recipient_index: recipientIndex,
                amount: amount,
                description: `–ü–µ—Ä–µ–≤–æ–¥ –∏–≥—Ä–æ–∫—É ${this.getPlayerName(recipientIndex)}`,
                timestamp: new Date().toISOString()
            };
            
            this.core.addTransferToHistory(transfer);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            this.uiService.showNotification(`–ü–µ—Ä–µ–≤–æ–¥ $${amount.toLocaleString()} –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!`, 'success');
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
            this.uiService.resetTransferForm();

            // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º—Å—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º, —á—Ç–æ–±—ã –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–≤–æ–¥
            await this.loadBankData(true);
            this.core.setLocalChanges(false);
            
            console.log('‚úÖ BankModule: –ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
            
        } catch (error) {
            console.error('‚ùå BankModule: –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞:', error);
            this.uiService.showNotification('–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞', 'error');
        } finally {
            this.uiService.hideLoadingIndicator();
            this.core.setLoading(false);
        }
    }

    /**
     * –û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: —Å—Ç–∞—Ä–æ–µ –∏–º—è –º–µ—Ç–æ–¥–∞
     */
    async processTransfer() {
        return this.executeTransfer();
    }
    
    /**
     * –û–±–Ω–æ–≤–∏—Ç—å UI
     */
    updateUI() {
        console.log('üé® BankModule: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI');
        
        const state = this.core.getState();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
        this.uiService.updateBalanceDisplay(state.currentBalance);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é —Å–≤–æ–¥–∫—É
        this.uiService.updateFinancialSummary({
            totalIncome: state.totalIncome,
            totalExpenses: state.totalExpenses,
            monthlyIncome: state.monthlyIncome,
            currentCredit: state.currentCredit,
            maxCredit: state.maxCredit
        });
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–≤–æ–¥–æ–≤
        this.uiService.updateTransfersHistory(state.transfersHistory, this.core.currentPlayerIndex);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
        if (this.core.roomData?.players) {
            this.uiService.updateRecipientsList(this.core.roomData.players, this.core.currentPlayerIndex);
        }
        
        console.log('‚úÖ BankModule: UI –æ–±–Ω–æ–≤–ª–µ–Ω');
    }
    
    /**
     * –û–±–Ω–æ–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–≤–æ–¥–æ–≤
     */
    updateTransfersHistory() {
        console.log('üìã BankModule: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤');
        
        const state = this.core.getState();
        this.uiService.updateTransfersHistory(state.transfersHistory, this.core.currentPlayerIndex);
    }
    
    /**
     * –û—Ç–∫—Ä—ã—Ç—å –±–∞–Ω–∫
     */
    async openBank() {
        console.log('üè¶ BankModule: –û—Ç–∫—Ä—ã—Ç–∏–µ –±–∞–Ω–∫–∞');
        
        try {
            this.uiService.showLoadingIndicator('–ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–Ω–∫–∞...');
            await this.loadBankData(true);
            
            const modal = document.getElementById('bankModal');
            if (modal) {
                modal.style.display = 'block';
                setTimeout(() => modal.classList.add('modal-show'), 10);
            }
            
            console.log('‚úÖ BankModule: –ë–∞–Ω–∫ –æ—Ç–∫—Ä—ã—Ç');
            
        } catch (error) {
            console.error('‚ùå BankModule: –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –±–∞–Ω–∫–∞:', error);
            this.uiService.showNotification('–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –±–∞–Ω–∫–∞', 'error');
        } finally {
            this.uiService.hideLoadingIndicator();
        }
    }
    
    /**
     * –ó–∞–∫—Ä—ã—Ç—å –±–∞–Ω–∫
     */
    closeBank() {
        console.log('üö™ BankModule: –ó–∞–∫—Ä—ã—Ç–∏–µ –±–∞–Ω–∫–∞');
        
        const modal = document.getElementById('bankModal');
        if (modal) {
            modal.style.display = 'none';
            modal.classList.remove('modal-show');
        }
        
        console.log('‚úÖ BankModule: –ë–∞–Ω–∫ –∑–∞–∫—Ä—ã—Ç');
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å ID –∫–æ–º–Ω–∞—Ç—ã
     */
    getRoomId() {
        try {
            // 1) –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ –∏–∑ helper'–∞
            if (typeof window.getRoomIdFromURL === 'function') {
                const fromHelper = window.getRoomIdFromURL();
                if (fromHelper) return fromHelper;
            }
            // 2) –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
            if (window.room_id) return window.room_id;
            if (window.roomId) return window.roomId;
            // 3) data-–∞—Ç—Ä–∏–±—É—Ç –Ω–∞ body –∏–ª–∏ html
            const attrRoom = document.body?.getAttribute('data-room-id') || document.documentElement?.getAttribute('data-room-id');
            if (attrRoom) return attrRoom;
            // 4) localStorage / sessionStorage
            const lsRoom = localStorage.getItem('room_id') || localStorage.getItem('roomId');
            if (lsRoom) return lsRoom;
            const ssRoom = sessionStorage.getItem('room_id') || sessionStorage.getItem('roomId');
            if (ssRoom) return ssRoom;
            // 5) –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–≤–ª–µ—á—å –∏–∑ URL –ø—É—Ç–∏ /rooms/:id –∏–ª–∏ ?id=
            const url = new URL(window.location.href);
            const byQuery = url.searchParams.get('id') || url.searchParams.get('room') || url.searchParams.get('roomId');
            if (byQuery) return byQuery;
            const pathMatch = url.pathname.match(/rooms\/(\w[\w-]*)/i);
            if (pathMatch && pathMatch[1]) return pathMatch[1];
        } catch (e) {
            console.warn('BankModule: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–ª—É—á–∏—Ç—å roomId', e);
        }
        return null;
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    getUserId() {
        try {
            // 1) –ò–∑ –æ–±—ä–µ–∫—Ç–∞ user –≤ localStorage
            const rawUser = localStorage.getItem('user') || sessionStorage.getItem('user');
            if (rawUser) {
                const user = JSON.parse(rawUser);
                const candidate = user?.id || user?._id || user?.user_id || user?.userId;
                if (candidate) return candidate;
            }
            // 2) –û—Ç–¥–µ–ª—å–Ω—ã–µ –∫–ª—é—á–∏
            const direct = localStorage.getItem('user_id') || localStorage.getItem('userId') || sessionStorage.getItem('user_id') || sessionStorage.getItem('userId');
            if (direct) return direct;
            // 3) –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
            if (window.currentUser?.id) return window.currentUser.id;
            if (window.user?.id) return window.user.id;
        } catch (error) {
            console.error('‚ùå BankModule: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        }
        return null;
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
     */
    getCurrentPlayerIndex(roomData) {
        const userId = this.getUserId();
        if (!userId || !roomData?.players) return 0;
        
        return roomData.players.findIndex(player => player.user_id === userId);
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∏–º—è –∏–≥—Ä–æ–∫–∞
     */
    getPlayerName(playerIndex) {
        const player = this.core.roomData?.players?.[playerIndex];
        return player?.name || `–ò–≥—Ä–æ–∫ ${playerIndex + 1}`;
    }
    
    /**
     * –ó–∞–ø—Ä–æ—Å–∏—Ç—å –∫—Ä–µ–¥–∏—Ç
     */
    async requestCredit() {
        console.log('üí≥ BankModule: –ó–∞–ø—Ä–æ—Å –∫—Ä–µ–¥–∏—Ç–∞');
        
        try {
            const maxCredit = this.core.state.maxCredit;
            const currentCredit = this.core.state.currentCredit;
            const availableCredit = maxCredit - currentCredit;
            
            if (availableCredit <= 0) {
                this.uiService.showNotification('–ö—Ä–µ–¥–∏—Ç–Ω—ã–π –ª–∏–º–∏—Ç –∏—Å—á–µ—Ä–ø–∞–Ω', 'error');
                return;
            }
            
            // –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—É—é —Å—É–º–º—É
            const amount = Math.min(availableCredit, 1000); // –ú–∞–∫—Å–∏–º—É–º 1000 –∑–∞ —Ä–∞–∑
            
            const roomId = this.getRoomId();
            const userId = this.getUserId();
            
            if (!roomId || !userId) {
                this.uiService.showNotification('–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã ID –∫–æ–º–Ω–∞—Ç—ã –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'error');
                return;
            }
            
            this.uiService.showLoadingIndicator('–ó–∞–ø—Ä–æ—Å –∫—Ä–µ–¥–∏—Ç–∞...');
            
            await this.apiService.requestCredit(roomId, userId, amount);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            const newCredit = currentCredit + amount;
            this.core.updateState({
                currentCredit: newCredit
            });
            
            this.uiService.showNotification(`–ö—Ä–µ–¥–∏—Ç $${amount.toLocaleString()} –æ–¥–æ–±—Ä–µ–Ω!`, 'success');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º UI
            this.updateUI();
            
            console.log('‚úÖ BankModule: –ö—Ä–µ–¥–∏—Ç –∑–∞–ø—Ä–æ—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
            
        } catch (error) {
            console.error('‚ùå BankModule: –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫—Ä–µ–¥–∏—Ç–∞:', error);
            this.uiService.showNotification('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫—Ä–µ–¥–∏—Ç–∞', 'error');
        } finally {
            this.uiService.hideLoadingIndicator();
        }
    }
    
    /**
     * –ü–æ–≥–∞—Å–∏—Ç—å –∫—Ä–µ–¥–∏—Ç
     */
    async payoffCredit() {
        console.log('üí≥ BankModule: –ü–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞');
        
        try {
            const currentCredit = this.core.state.currentCredit;
            const currentBalance = this.core.state.currentBalance;
            
            if (currentCredit <= 0) {
                this.uiService.showNotification('–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏', 'info');
                return;
            }
            
            const payoffAmount = Math.min(currentCredit, currentBalance);
            
            if (payoffAmount <= 0) {
                this.uiService.showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–≥–∞—à–µ–Ω–∏—è', 'error');
                return;
            }
            
            const roomId = this.getRoomId();
            const userId = this.getUserId();
            
            if (!roomId || !userId) {
                this.uiService.showNotification('–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã ID –∫–æ–º–Ω–∞—Ç—ã –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'error');
                return;
            }
            
            this.uiService.showLoadingIndicator('–ü–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞...');
            
            await this.apiService.payoffCredit(roomId, userId, payoffAmount);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            const newCredit = currentCredit - payoffAmount;
            const newBalance = currentBalance - payoffAmount;
            
            this.core.updateState({
                currentCredit: newCredit,
                currentBalance: newBalance
            });
            
            this.uiService.showNotification(`–ö—Ä–µ–¥–∏—Ç –ø–æ–≥–∞—à–µ–Ω –Ω–∞ $${payoffAmount.toLocaleString()}`, 'success');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º UI
            this.updateUI();
            
            console.log('‚úÖ BankModule: –ö—Ä–µ–¥–∏—Ç –ø–æ–≥–∞—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
            
        } catch (error) {
            console.error('‚ùå BankModule: –û—à–∏–±–∫–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞:', error);
            this.uiService.showNotification('–û—à–∏–±–∫–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞', 'error');
        } finally {
            this.uiService.hideLoadingIndicator();
        }
    }
    
    /**
     * –£–Ω–∏—á—Ç–æ–∂–∏—Ç—å –º–æ–¥—É–ª—å
     */
    destroy() {
        console.log('üóëÔ∏è BankModule: –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –º–æ–¥—É–ª—è');
        
        // –û—á–∏—â–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
        if (this.updateInterval) {
            clearInterval(this.updateInterval);
        }
        if (this.incomingTransfersInterval) {
            clearInterval(this.incomingTransfersInterval);
        }
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        this.core.reset();
        
        this.isInitialized = false;
        console.log('‚úÖ BankModule: –ú–æ–¥—É–ª—å —É–Ω–∏—á—Ç–æ–∂–µ–Ω');
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
if (typeof window !== 'undefined') {
    window.BankModule = BankModule;
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è Node.js
if (typeof module !== 'undefined' && module.exports) {
    module.exports = BankModule;
}
