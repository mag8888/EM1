// Bank Module v3 bootstrap
if (typeof window.BankModule === 'undefined') {
  console.warn('BankModule base not found. Load bank-module-v2 core files first.');
}

let bankModuleInstance = null;

async function ensureBankModalV3() {
  if (!document.getElementById('bankModal')) {
    const resp = await fetch('/bank-module-v3/bank-modal.html', { cache: 'no-store' });
    const html = await resp.text();
    const tmp = document.createElement('div');
    tmp.innerHTML = html.trim();
    const el = tmp.firstElementChild;
    if (el) document.body.appendChild(el);
  }
}

async function initBankModuleV3() {
  await ensureBankModalV3();
  if (!window.BankModule) return null;
  bankModuleInstance = new window.BankModule();
  await bankModuleInstance.init();
  return bankModuleInstance;
}

async function openBankV3() {
  if (!bankModuleInstance) {
    await initBankModuleV3();
  }
  if (bankModuleInstance) {
    return bankModuleInstance.openBank();
  }
  console.error('Failed to initialize bank module');
}

function processTransfer() {
  if (bankModuleInstance) {
    return bankModuleInstance.executeTransfer();
  }
  console.error('Bank module not initialized');
}

function resetTransferForm() {
  if (bankModuleInstance) {
    return bankModuleInstance.resetTransferForm();
  }
  console.error('Bank module not initialized');
}

async function requestCredit() {
  if (!bankModuleInstance) {
    console.log('üîÑ BankModule v3: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫—Ä–µ–¥–∏—Ç–∞');
    await initBankModuleV3();
  }
  
  if (bankModuleInstance) {
    return bankModuleInstance.requestCredit();
  }
  console.error('Bank module not initialized');
}

function payoffCredit() {
  if (bankModuleInstance) {
    return bankModuleInstance.payoffCredit();
  }
  console.error('Bank module not initialized');
}

// Make functions globally available
window.initBankModuleV3 = initBankModuleV3;
window.openBankV3 = openBankV3;
window.processTransfer = processTransfer;
window.resetTransferForm = resetTransferForm;
window.requestCredit = requestCredit;
window.payoffCredit = payoffCredit;

// –ê–≤—Ç–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∞–π–¥–±–∞—Ä–∞ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
  // –ù–µ–±–ª–æ–∫–∏—Ä—É—é—â–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è; –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
  setTimeout(() => {
    initBankModuleV3().catch(err => console.warn('Bank v3 auto-init failed:', err));
  }, 0);
});

// –£–¥–æ–±–Ω—ã–π –≤—ã–∑–æ–≤: –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –±–∞–Ω–∫ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–∫–Ω–æ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –∫—Ä–µ–¥–∏—Ç–∞
async function openCreditModalV3() {
  if (!bankModuleInstance) {
    await initBankModuleV3();
  }
  const defaultAmount = 1000;
  const input = prompt('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∫—Ä–µ–¥–∏—Ç–∞ (—à–∞–≥ 1000)', String(defaultAmount));
  if (input === null) return; // cancel
  const amount = parseInt(input, 10);
  if (Number.isNaN(amount) || amount <= 0) {
    alert('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É');
    return;
  }
  if (bankModuleInstance?.requestCredit) {
    // –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å—É–º–º—É –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä (fallback –Ω–∞ –∞–≤—Ç–æ)
    try {
      await bankModuleInstance.requestCredit(amount);
      // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –æ—Ç–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ –±–∞–Ω–∫–∞
      if (bankModuleInstance.loadBankData) {
        await bankModuleInstance.loadBankData(true);
      }
      // –ù–µ–Ω–∞–≤—è–∑—á–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      try { console.log('‚úÖ –ö—Ä–µ–¥–∏—Ç –∑–∞—á–∏—Å–ª–µ–Ω: ' + amount); } catch (_) {}
    } catch (e) { console.error(e); }
  } else {
    alert('–ö—Ä–µ–¥–∏—Ç–Ω—ã–π –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
  }
}

window.openCreditModalV3 = openCreditModalV3;

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–∫–∞–∑–∞ –¥–µ—Ç–∞–ª–µ–π –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
function showIncomeDetails() {
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –¥–æ—Ö–æ–¥–∞—Ö –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
  const totalIncome = window.monthlyIncome || 0;
  const playerBusinesses = window.playerBusinesses || {};
  const currentPlayer = window.currentPlayer || 0;
  
  const businesses = playerBusinesses[currentPlayer] || [];
  
  let details = `üí∞ –î–ï–¢–ê–õ–ò –î–û–•–û–î–û–í\n\n`;
  details += `üìä –û–±—â–∏–π –¥–æ—Ö–æ–¥: $${totalIncome.toLocaleString()}\n\n`;
  
  if (businesses.length > 0) {
    details += `üè¢ –ë–∏–∑–Ω–µ—Å—ã:\n`;
    businesses.forEach((business, index) => {
      const cell = window.getOuterCellDataNew?.(business);
      if (cell) {
        details += `‚Ä¢ ${cell.name}: $${(cell.income || 0).toLocaleString()}/–º–µ—Å\n`;
      }
    });
  } else {
    details += `‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–æ—Ö–æ–¥–∞`;
  }
  
  alert(details);
}

function showExpenseDetails() {
  const monthlyExpenses = window.monthlyExpenses || 0;
  const expensesBreakdown = window.expensesBreakdown || { base: 0, credit: 0 };
  const totalCredit = window.totalCredit || 0;
  const creditPayment = window.creditPayment || 0;
  
  let details = `üí∏ –î–ï–¢–ê–õ–ò –†–ê–°–•–û–î–û–í\n\n`;
  details += `üìä –û–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã: $${monthlyExpenses.toLocaleString()}\n\n`;
  details += `üìã –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è:\n`;
  details += `‚Ä¢ –ë–∞–∑–æ–≤—ã–µ —Ä–∞—Å—Ö–æ–¥—ã: $${expensesBreakdown.base.toLocaleString()}\n`;
  details += `‚Ä¢ –ü–ª–∞—Ç–µ–∂–∏ –ø–æ –∫—Ä–µ–¥–∏—Ç–∞–º: $${expensesBreakdown.credit.toLocaleString()}\n\n`;
  
  if (totalCredit > 0) {
    details += `üí≥ –ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n`;
    details += `‚Ä¢ –û–±—â–∏–π –¥–æ–ª–≥: $${totalCredit.toLocaleString()}\n`;
    details += `‚Ä¢ –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂: $${creditPayment.toLocaleString()}\n`;
  } else {
    details += `‚úÖ –ö—Ä–µ–¥–∏—Ç–æ–≤ –Ω–µ—Ç`;
  }
  
  alert(details);
}

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏
window.showIncomeDetails = showIncomeDetails;
window.showExpenseDetails = showExpenseDetails;

