// Bank Module v3 bootstrap
if (typeof window.BankModule === 'undefined') {
  console.warn('BankModule base not found. Load bank-module-v2 core files first.');
}

let bankModuleInstance = null;

async function ensureBankModalV3() {
  if (!document.getElementById('bankModal')) {
    const resp = await fetch('/bank-module-v3/bank-modal.html', { cache: 'no-store' });
    const html = await resp.text();
    const tmp = document.createElement('div');
    tmp.innerHTML = html.trim();
    const el = tmp.firstElementChild;
    if (el) document.body.appendChild(el);
  }
}

async function initBankModuleV3() {
  await ensureBankModalV3();
  if (!window.BankModule) return null;
  bankModuleInstance = new window.BankModule();
  await bankModuleInstance.init();
  return bankModuleInstance;
}

async function openBankV3() {
  if (!bankModuleInstance) {
    await initBankModuleV3();
  }
  if (bankModuleInstance) {
    const result = await bankModuleInstance.openBank();
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫—Ä–µ–¥–∏—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –±–∞–Ω–∫–∞
    setTimeout(() => {
      forceUpdateCreditData();
    }, 500);
    
    return result;
  }
  console.error('Failed to initialize bank module');
}

function processTransfer() {
  if (bankModuleInstance) {
    return bankModuleInstance.executeTransfer();
  }
  console.error('Bank module not initialized');
}

function resetTransferForm() {
  if (bankModuleInstance) {
    return bankModuleInstance.resetTransferForm();
  }
  console.error('Bank module not initialized');
}

async function requestCredit() {
  if (!bankModuleInstance) {
    console.log('üîÑ BankModule v3: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫—Ä–µ–¥–∏—Ç–∞');
    await initBankModuleV3();
  }
  
  if (bankModuleInstance) {
    return bankModuleInstance.requestCredit();
  }
  console.error('Bank module not initialized');
}

function payoffCredit() {
  if (bankModuleInstance) {
    return bankModuleInstance.payoffCredit();
  }
  console.error('Bank module not initialized');
}

// Make functions globally available
window.initBankModuleV3 = initBankModuleV3;
window.openBankV3 = openBankV3;
window.processTransfer = processTransfer;
window.resetTransferForm = resetTransferForm;
window.requestCredit = requestCredit;
window.payoffCredit = payoffCredit;

// –ê–≤—Ç–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∞–π–¥–±–∞—Ä–∞ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
  // –ù–µ–±–ª–æ–∫–∏—Ä—É—é—â–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è; –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
  setTimeout(() => {
    initBankModuleV3().catch(err => console.warn('Bank v3 auto-init failed:', err));
  }, 0);
});

// –£–¥–æ–±–Ω—ã–π –≤—ã–∑–æ–≤: –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –±–∞–Ω–∫ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–∫–Ω–æ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –∫—Ä–µ–¥–∏—Ç–∞
async function openCreditModalV3() {
  if (!bankModuleInstance) {
    await initBankModuleV3();
  }
  const defaultAmount = 1000;
  const input = prompt('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∫—Ä–µ–¥–∏—Ç–∞ (—à–∞–≥ 1000)', String(defaultAmount));
  if (input === null) return; // cancel
  const amount = parseInt(input, 10);
  if (Number.isNaN(amount) || amount <= 0) {
    alert('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É');
    return;
  }
  if (bankModuleInstance?.requestCredit) {
    // –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å—É–º–º—É –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä (fallback –Ω–∞ –∞–≤—Ç–æ)
    try {
      await bankModuleInstance.requestCredit(amount);
      // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –æ—Ç–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ –±–∞–Ω–∫–∞
      if (bankModuleInstance.loadBankData) {
        await bankModuleInstance.loadBankData(true);
      }
      // –ù–µ–Ω–∞–≤—è–∑—á–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      try { console.log('‚úÖ –ö—Ä–µ–¥–∏—Ç –∑–∞—á–∏—Å–ª–µ–Ω: ' + amount); } catch (_) {}
    } catch (e) { console.error(e); }
  } else {
    alert('–ö—Ä–µ–¥–∏—Ç–Ω—ã–π –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
  }
}

window.openCreditModalV3 = openCreditModalV3;

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–∫–∞–∑–∞ –¥–µ—Ç–∞–ª–µ–π –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
function showIncomeDetails() {
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –¥–æ—Ö–æ–¥–∞—Ö –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
  const totalIncome = window.monthlyIncome || 0;
  const playerBusinesses = window.playerBusinesses || {};
  const currentPlayer = window.currentPlayer || 0;
  
  const businesses = playerBusinesses[currentPlayer] || [];
  
  let details = `üí∞ –î–ï–¢–ê–õ–ò –î–û–•–û–î–û–í\n\n`;
  details += `üìä –û–±—â–∏–π –¥–æ—Ö–æ–¥: $${totalIncome.toLocaleString()}\n\n`;
  
  if (businesses.length > 0) {
    details += `üè¢ –ë–∏–∑–Ω–µ—Å—ã:\n`;
    businesses.forEach((business, index) => {
      const cell = window.getOuterCellDataNew?.(business);
      if (cell) {
        details += `‚Ä¢ ${cell.name}: $${(cell.income || 0).toLocaleString()}/–º–µ—Å\n`;
      }
    });
  } else {
    details += `‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–æ—Ö–æ–¥–∞`;
  }
  
  alert(details);
}

function showExpenseDetails() {
  const monthlyExpenses = window.monthlyExpenses || 0;
  const expensesBreakdown = window.expensesBreakdown || { base: 0, credit: 0 };
  const totalCredit = window.totalCredit || 0;
  const creditPayment = window.creditPayment || 0;
  
  let details = `üí∏ –î–ï–¢–ê–õ–ò –†–ê–°–•–û–î–û–í\n\n`;
  details += `üìä –û–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã: $${monthlyExpenses.toLocaleString()}\n\n`;
  details += `üìã –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è:\n`;
  details += `‚Ä¢ –ë–∞–∑–æ–≤—ã–µ —Ä–∞—Å—Ö–æ–¥—ã: $${expensesBreakdown.base.toLocaleString()}\n`;
  details += `‚Ä¢ –ü–ª–∞—Ç–µ–∂–∏ –ø–æ –∫—Ä–µ–¥–∏—Ç–∞–º: $${expensesBreakdown.credit.toLocaleString()}\n\n`;
  
  if (totalCredit > 0) {
    details += `üí≥ –ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n`;
    details += `‚Ä¢ –û–±—â–∏–π –¥–æ–ª–≥: $${totalCredit.toLocaleString()}\n`;
    details += `‚Ä¢ –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂: $${creditPayment.toLocaleString()}\n`;
  } else {
    details += `‚úÖ –ö—Ä–µ–¥–∏—Ç–æ–≤ –Ω–µ—Ç`;
  }
  
  alert(details);
}

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏
window.showIncomeDetails = showIncomeDetails;
window.showExpenseDetails = showExpenseDetails;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –≤ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º –º–æ–¥—É–ª–µ
async function updateBankBalance(newBalance) {
  if (bankModuleInstance && bankModuleInstance.core) {
    try {
      // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –≤ —è–¥—Ä–µ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ –º–æ–¥—É–ª—è
      bankModuleInstance.core.updateBalance(newBalance, 'externalUpdate');
      
      // –û–±–Ω–æ–≤–ª—è–µ–º UI
      bankModuleInstance.updateUI();
      
      console.log('‚úÖ –ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º –º–æ–¥—É–ª–µ:', newBalance);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –≤ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º –º–æ–¥—É–ª–µ:', error);
    }
  }
}

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ–π
window.updateBankBalance = updateBankBalance;

// ===== –¶–ï–ù–¢–†–ê–õ–ò–ó–û–í–ê–ù–ù–´–ï –ë–ê–ù–ö–û–í–°–ö–ò–ï –§–£–ù–ö–¶–ò–ò =====

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤
let globalCurrentBalance = 0;
let globalMonthlyIncome = 0;
let globalMonthlyExpenses = 0;
let globalTotalCredit = 0;
let globalCreditPayment = 0;
let globalExpensesBreakdown = { base: 0, credit: 0 };

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –∫ –±–∞–ª–∞–Ω—Å—É
async function addBalance(amount, description) {
    console.log(`üí∞ addBalance: +$${amount} - ${description}`);
    globalCurrentBalance = (globalCurrentBalance || 0) + amount;
    
    try {
        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –º–æ–¥—É–ª–µ–º
        if (window.updateBankBalance) {
            await window.updateBankBalance(globalCurrentBalance);
        }
        
        // –¢–∞–∫–∂–µ –ø—ã—Ç–∞–µ–º—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ —Å—Ç–∞—Ä—ã–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π –º–æ–¥—É–ª—å
        if (window.bankModule?.loadBankData) {
            await window.bankModule.loadBankData(true);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –±–∞–ª–∞–Ω—Å–∞:', error);
    }
    
    updateBalanceDisplay();
    syncVariablesToTable(); // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–±—Ä–∞—Ç–Ω–æ –≤ table.html
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ —Å –±–∞–ª–∞–Ω—Å–∞
async function subtractBalance(amount, description) {
    console.log(`üí∏ subtractBalance: -$${amount} - ${description}`);
    globalCurrentBalance = Math.max(0, (globalCurrentBalance || 0) - amount);
    
    try {
        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –º–æ–¥—É–ª–µ–º
        if (window.updateBankBalance) {
            await window.updateBankBalance(globalCurrentBalance);
        }
        
        // –¢–∞–∫–∂–µ –ø—ã—Ç–∞–µ–º—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ —Å—Ç–∞—Ä—ã–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π –º–æ–¥—É–ª—å
        if (window.bankModule?.loadBankData) {
            await window.bankModule.loadBankData(true);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –±–∞–ª–∞–Ω—Å–∞:', error);
    }
    
    updateBalanceDisplay();
    syncVariablesToTable(); // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–±—Ä–∞—Ç–Ω–æ –≤ table.html
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∑—è—Ç–∏—è –∫—Ä–µ–¥–∏—Ç–∞
async function takeCredit(amount) {
    if (amount <= 0) return;
    
    console.log(`üí∞ takeCredit: –≤–∑—è—Ç –∫—Ä–µ–¥–∏—Ç –Ω–∞ $${amount}`);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫—Ä–µ–¥–∏—Ç –∫ –±–∞–ª–∞–Ω—Å—É
    globalTotalCredit += amount;
    globalCurrentBalance += amount;
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂ (10% –æ—Ç —Å—É–º–º—ã –∫—Ä–µ–¥–∏—Ç–∞)
    const newCreditPayment = Math.floor(amount * 0.1);
    globalCreditPayment += newCreditPayment;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å—Ö–æ–¥—ã –∏ PAYDAY
    globalMonthlyExpenses += newCreditPayment;
    globalExpensesBreakdown.credit += newCreditPayment;
    
    console.log(`üí∞ –í–∑—è—Ç –∫—Ä–µ–¥–∏—Ç: $${amount.toLocaleString()}`);
    console.log(`üí∏ –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂: $${newCreditPayment.toLocaleString()}`);
    console.log(`üìä –û–±—â–∏–π –ø–ª–∞—Ç–µ–∂ –ø–æ –∫—Ä–µ–¥–∏—Ç–∞–º: $${globalCreditPayment.toLocaleString()}`);
    console.log(`üìä –ù–æ–≤—ã–µ —Ä–∞—Å—Ö–æ–¥—ã: $${globalMonthlyExpenses.toLocaleString()}`);
    
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –º–æ–¥—É–ª–µ–º
    try {
        if (window.updateBankBalance) {
            await window.updateBankBalance(globalCurrentBalance);
        }
        
        if (window.bankModule?.loadBankData) {
            await window.bankModule.loadBankData(true);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫—Ä–µ–¥–∏—Ç–∞:', error);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    updateCreditDisplay();
    updateBalanceDisplay();
    updateFinancesDisplay();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    alert(`‚úÖ –ö—Ä–µ–¥–∏—Ç –≤–∑—è—Ç –Ω–∞ $${amount.toLocaleString()}\nüí∏ –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂: $${newCreditPayment.toLocaleString()}\nüìä –†–∞—Å—Ö–æ–¥—ã —É–≤–µ–ª–∏—á–µ–Ω—ã –Ω–∞ $${newCreditPayment.toLocaleString()}`);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–≥–∞—à–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞
async function payoffCredit() {
    if (globalTotalCredit <= 0) {
        alert('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤');
        return;
    }
    
    const canAfford = globalCurrentBalance >= globalTotalCredit;
    if (!canAfford) {
        alert(`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–≥–∞—à–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞.\n–ù—É–∂–Ω–æ: $${globalTotalCredit.toLocaleString()}\n–£ –≤–∞—Å: $${globalCurrentBalance.toLocaleString()}`);
        return;
    }
    
    const confirmPayoff = confirm(`–ü–æ–≥–∞—Å–∏—Ç—å –∫—Ä–µ–¥–∏—Ç –Ω–∞ $${globalTotalCredit.toLocaleString()}?`);
    if (confirmPayoff) {
        console.log(`üí∞ payoffCredit: –ø–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞ –Ω–∞ $${globalTotalCredit}`);
        
        // –°–ø–∏—Å—ã–≤–∞–µ–º –∫—Ä–µ–¥–∏—Ç —Å –±–∞–ª–∞–Ω—Å–∞
        globalCurrentBalance -= globalTotalCredit;
        
        // –£–º–µ–Ω—å—à–∞–µ–º —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ —Å—É–º–º—É –ø–ª–∞—Ç–µ–∂–∞
        globalMonthlyExpenses -= globalCreditPayment;
        globalExpensesBreakdown.credit = Math.max(0, globalExpensesBreakdown.credit - globalCreditPayment);
        
        console.log(`‚úÖ –ö—Ä–µ–¥–∏—Ç –ø–æ–≥–∞—à–µ–Ω: $${globalTotalCredit.toLocaleString()}`);
        console.log(`üìä –†–∞—Å—Ö–æ–¥—ã —É–º–µ–Ω—å—à–µ–Ω—ã –Ω–∞: $${globalCreditPayment.toLocaleString()}`);
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫—Ä–µ–¥–∏—Ç–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        const oldCreditPayment = globalCreditPayment;
        globalTotalCredit = 0;
        globalCreditPayment = 0;
        
        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –º–æ–¥—É–ª–µ–º
        try {
            if (window.updateBankBalance) {
                await window.updateBankBalance(globalCurrentBalance);
            }
            
            if (window.bankModule?.loadBankData) {
                await window.bankModule.loadBankData(true);
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–≥–∞—à–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞:', error);
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        updateCreditDisplay();
        updateBalanceDisplay();
        updateFinancesDisplay();
        
        alert(`‚úÖ –ö—Ä–µ–¥–∏—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–≥–∞—à–µ–Ω!\nüìä –†–∞—Å—Ö–æ–¥—ã —É–º–µ–Ω—å—à–µ–Ω—ã –Ω–∞ $${oldCreditPayment.toLocaleString()}`);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞
function addMonthlyIncome(amount, description) {
    globalMonthlyIncome += amount;
    console.log(`üìà –î–æ–±–∞–≤–ª–µ–Ω –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –¥–æ—Ö–æ–¥: $${amount.toLocaleString()} - ${description}`);
    console.log(`üìä –û–±—â–∏–π –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –¥–æ—Ö–æ–¥: $${globalMonthlyIncome.toLocaleString()}`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    updateFinancesDisplay();
    updateCreditDisplay();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
function updateBalanceDisplay() {
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –≤ UI
    const balanceElements = document.querySelectorAll('#bankBalance, .balance-amount, #dealCurrentBalance, #currentBalance');
    balanceElements.forEach(el => {
        if (el) {
            el.textContent = `$${globalCurrentBalance.toLocaleString()}`;
        }
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é currentBalance –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    if (typeof window.currentBalance !== 'undefined') {
        window.currentBalance = globalCurrentBalance;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–æ–≤
function updateCreditDisplay() {
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞
    const currentCreditElement = document.getElementById('currentCredit');
    if (currentCreditElement) {
        currentCreditElement.textContent = `$${globalTotalCredit.toLocaleString()}`;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫—Ä–µ–¥–∏—Ç
    const maxCreditElement = document.getElementById('maxCredit');
    if (maxCreditElement) {
        const maxCredit = globalMonthlyIncome * 10;
        maxCreditElement.textContent = `$${maxCredit.toLocaleString()}`;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    if (typeof window.totalCredit !== 'undefined') {
        window.totalCredit = globalTotalCredit;
    }
    if (typeof window.creditPayment !== 'undefined') {
        window.creditPayment = globalCreditPayment;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤
function updateFinancesDisplay() {
    console.log('üîç updateFinancesDisplay: monthlyIncome =', globalMonthlyIncome, 'monthlyExpenses =', globalMonthlyExpenses);
    
    // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏ PAYDAY
    const expensesElement = document.getElementById('totalExpenses');
    const paydayElement = document.getElementById('monthlyIncome');
    
    if (expensesElement) {
        expensesElement.textContent = `$${(globalMonthlyExpenses || 0).toLocaleString()}`;
    }
    
    // –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤
    const baseEl = document.getElementById('expenseBase');
    const creditEl = document.getElementById('expenseCredit');
    if (baseEl) baseEl.textContent = `$${((globalExpensesBreakdown?.base) || 0).toLocaleString()}`;
    if (creditEl) creditEl.textContent = `$${((globalExpensesBreakdown?.credit) || 0).toLocaleString()}`;

    if (paydayElement) {
        // PAYDAY = –¥–æ—Ö–æ–¥ - —Ä–∞—Å—Ö–æ–¥—ã
        const payday = (globalMonthlyIncome || 0) - (globalMonthlyExpenses || 0);
        paydayElement.textContent = `$${payday.toLocaleString()}/–º–µ—Å`;
        console.log('üîç PAYDAY calculated:', payday);
        
        // –ú–µ–Ω—è–µ–º —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–Ω–∞—á–µ–Ω–∏—è
        if (payday < 0) {
            paydayElement.style.color = '#ef4444'; // –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ
        } else if (payday > 0) {
            paydayElement.style.color = '#10b981'; // –ó–µ–ª–µ–Ω—ã–π –¥–ª—è –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ
        } else {
            paydayElement.style.color = '#f59e0b'; // –û—Ä–∞–Ω–∂–µ–≤—ã–π –¥–ª—è –Ω—É–ª—è
        }
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    if (typeof window.monthlyIncome !== 'undefined') {
        window.monthlyIncome = globalMonthlyIncome;
    }
    if (typeof window.monthlyExpenses !== 'undefined') {
        window.monthlyExpenses = globalMonthlyExpenses;
    }
    if (typeof window.expensesBreakdown !== 'undefined') {
        window.expensesBreakdown = globalExpensesBreakdown;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫—Ä–µ–¥–∏—Ç–∞ (–ª–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)
function requestCreditLocal() {
    const creditAmountInput = document.getElementById('creditAmount');
    if (!creditAmountInput) return;
    
    const amount = parseInt(creditAmountInput.value) || 0;
    
    if (amount <= 0) {
        alert('‚ùå –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∫—Ä–µ–¥–∏—Ç–∞');
        return;
    }
    
    if (amount < 1000) {
        alert('‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞: $1,000');
        return;
    }
    
    if (amount % 1000 !== 0) {
        alert('‚ùå –°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫—Ä–∞—Ç–Ω–∞ $1,000');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫—Ä–µ–¥–∏—Ç (—É—á–∏—Ç—ã–≤–∞–µ–º —É–∂–µ –≤–∑—è—Ç—ã–µ –∫—Ä–µ–¥–∏—Ç—ã)
    const maxCredit = globalMonthlyIncome * 10;
    const availableCredit = maxCredit - globalTotalCredit;
    
    if (amount > availableCredit) {
        alert(`‚ùå –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–æ—Å—Ç—É–ø–Ω–∞—è —Å—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞: $${availableCredit.toLocaleString()}\nüí≥ –£–∂–µ –≤–∑—è—Ç–æ: $${globalTotalCredit.toLocaleString()}\nüìä –ú–∞–∫—Å–∏–º—É–º: $${maxCredit.toLocaleString()}`);
        return;
    }
    
    // –ë–µ—Ä–µ–º –∫—Ä–µ–¥–∏—Ç
    takeCredit(amount);
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    closeCreditModal();
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–Ω–∞–Ω—Å—ã, —á—Ç–æ–±—ã PAYDAY –∏ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –æ–±–Ω–æ–≤–∏–ª–∏—Å—å –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
    updateFinancesDisplay();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∑—è—Ç–∏—è –∫—Ä–µ–¥–∏—Ç–∞ –Ω–∞ —Ä–∞—Å—Ö–æ–¥—ã
function takeCreditForExpense() {
    const card = window.currentExpenseCard;
    if (!card) return;
    
    const amount = card.amount;
    if (amount <= 0) return;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫—Ä–µ–¥–∏—Ç
    const maxCredit = globalMonthlyIncome * 10;
    const availableCredit = maxCredit - globalTotalCredit;
    
    if (amount > availableCredit) {
        alert(`‚ùå –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–æ—Å—Ç—É–ø–Ω–∞—è —Å—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞: $${availableCredit.toLocaleString()}\nüí≥ –£–∂–µ –≤–∑—è—Ç–æ: $${globalTotalCredit.toLocaleString()}\nüìä –ú–∞–∫—Å–∏–º—É–º: $${maxCredit.toLocaleString()}`);
        return;
    }
    
    // –ë–µ—Ä–µ–º –∫—Ä–µ–¥–∏—Ç
    takeCredit(amount);
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    closeExpenseCardModal();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    alert(`‚úÖ –ö—Ä–µ–¥–∏—Ç –≤–∑—è—Ç –Ω–∞ $${amount.toLocaleString()}\nüí∏ –†–∞—Å—Ö–æ–¥—ã –æ–ø–ª–∞—á–µ–Ω—ã: ${card.name}`);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ table.html
function initializeGlobalVariables() {
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∏–∑ table.html
    if (typeof window.currentBalance !== 'undefined') {
        globalCurrentBalance = window.currentBalance;
    }
    if (typeof window.monthlyIncome !== 'undefined') {
        globalMonthlyIncome = window.monthlyIncome;
    }
    if (typeof window.monthlyExpenses !== 'undefined') {
        globalMonthlyExpenses = window.monthlyExpenses;
    }
    if (typeof window.totalCredit !== 'undefined') {
        globalTotalCredit = window.totalCredit;
    }
    if (typeof window.creditPayment !== 'undefined') {
        globalCreditPayment = window.creditPayment;
    }
    if (typeof window.expensesBreakdown !== 'undefined') {
        globalExpensesBreakdown = window.expensesBreakdown;
    }
    
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ –º–æ–¥—É–ª—è v2 –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
    try {
        if (window.bankModule && window.bankModule.core && window.bankModule.core.state) {
            const bankState = window.bankModule.core.state;
            if (bankState.currentCredit !== undefined) {
                globalTotalCredit = bankState.currentCredit;
                console.log('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω –∫—Ä–µ–¥–∏—Ç –∏–∑ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ –º–æ–¥—É–ª—è v2:', globalTotalCredit);
            }
        }
    } catch (e) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –º–æ–¥—É–ª–µ–º v2:', e);
    }
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
    setTimeout(() => {
        syncCreditFromServer();
        updateCreditDisplay();
    }, 1000);
    
    console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –±–∞–Ω–∫–∞:', {
        balance: globalCurrentBalance,
        income: globalMonthlyIncome,
        expenses: globalMonthlyExpenses,
        credit: globalTotalCredit
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–±—Ä–∞—Ç–Ω–æ –≤ table.html
function syncVariablesToTable() {
    if (typeof window.currentBalance !== 'undefined') {
        window.currentBalance = globalCurrentBalance;
    }
    if (typeof window.monthlyIncome !== 'undefined') {
        window.monthlyIncome = globalMonthlyIncome;
    }
    if (typeof window.monthlyExpenses !== 'undefined') {
        window.monthlyExpenses = globalMonthlyExpenses;
    }
    if (typeof window.totalCredit !== 'undefined') {
        window.totalCredit = globalTotalCredit;
    }
    if (typeof window.creditPayment !== 'undefined') {
        window.creditPayment = globalCreditPayment;
    }
    if (typeof window.expensesBreakdown !== 'undefined') {
        window.expensesBreakdown = globalExpensesBreakdown;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
function syncCreditFromServer() {
    try {
        if (window.bankModule && window.bankModule.core && window.bankModule.core.state) {
            const bankState = window.bankModule.core.state;
            if (bankState.currentCredit !== undefined) {
                const oldCredit = globalTotalCredit;
                globalTotalCredit = bankState.currentCredit;
                
                if (oldCredit !== globalTotalCredit) {
                    console.log(`üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫—Ä–µ–¥–∏—Ç–∞: ${oldCredit} ‚Üí ${globalTotalCredit}`);
                    updateCreditDisplay();
                    syncVariablesToTable();
                }
                
                return globalTotalCredit;
            }
        }
    } catch (e) {
        console.warn('–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫—Ä–µ–¥–∏—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞:', e);
    }
    return globalTotalCredit;
}

// –î–µ–ª–∞–µ–º –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏
window.addBalance = addBalance;
window.subtractBalance = subtractBalance;
window.takeCredit = takeCredit;
window.payoffCredit = payoffCredit;
window.addMonthlyIncome = addMonthlyIncome;
window.updateBalanceDisplay = updateBalanceDisplay;
window.updateCreditDisplay = updateCreditDisplay;
window.updateFinancesDisplay = updateFinancesDisplay;
window.requestCreditLocal = requestCreditLocal;
window.takeCreditForExpense = takeCreditForExpense;
window.initializeGlobalVariables = initializeGlobalVariables;
window.syncVariablesToTable = syncVariablesToTable;
window.syncCreditFromServer = syncCreditFromServer;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–æ–≤
function checkCreditStatus() {
    try {
        if (window.bankModule && window.bankModule.core && window.bankModule.core.state) {
            const bankState = window.bankModule.core.state;
            const serverCredit = bankState.currentCredit || 0;
            const localCredit = globalTotalCredit || 0;
            
            console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–æ–≤:');
            console.log(`üìä –ö—Ä–µ–¥–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: $${serverCredit.toLocaleString()}`);
            console.log(`üíª –ö—Ä–µ–¥–∏—Ç –ª–æ–∫–∞–ª—å–Ω–æ: $${localCredit.toLocaleString()}`);
            console.log(`üìà –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫—Ä–µ–¥–∏—Ç: $${(globalMonthlyIncome * 10).toLocaleString()}`);
            console.log(`üí∞ –î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –∫—Ä–µ–¥–∏—Ç–∞: $${((globalMonthlyIncome * 10) - serverCredit).toLocaleString()}`);
            
            if (serverCredit !== localCredit) {
                console.warn('‚ö†Ô∏è –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –º–µ–∂–¥—É —Å–µ—Ä–≤–µ—Ä–Ω—ã–º–∏ –∏ –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!');
                globalTotalCredit = serverCredit;
                updateCreditDisplay();
                syncVariablesToTable();
            }
            
            return {
                serverCredit,
                localCredit,
                maxCredit: globalMonthlyIncome * 10,
                availableCredit: (globalMonthlyIncome * 10) - serverCredit
            };
        }
    } catch (e) {
        console.warn('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–æ–≤:', e);
    }
    
    return {
        serverCredit: 0,
        localCredit: globalTotalCredit,
        maxCredit: globalMonthlyIncome * 10,
        availableCredit: (globalMonthlyIncome * 10) - globalTotalCredit
    };
}

window.checkCreditStatus = checkCreditStatus;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º —Å–∫—Ä–æ–ª–ª–∞
function updateScrollIndicator() {
    const historyContainer = document.getElementById('transfersHistory');
    const scrollIndicator = document.getElementById('scrollIndicator');
    
    if (!historyContainer || !scrollIndicator) return;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–∫—Ä–æ–ª–ª
    const hasScroll = historyContainer.scrollHeight > historyContainer.clientHeight;
    
    if (hasScroll) {
        scrollIndicator.style.display = 'flex';
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ –¥–æ –∫–æ–Ω—Ü–∞
        historyContainer.addEventListener('scroll', function() {
            const isAtBottom = historyContainer.scrollTop + historyContainer.clientHeight >= historyContainer.scrollHeight - 5;
            scrollIndicator.style.display = isAtBottom ? 'none' : 'flex';
        });
    } else {
        scrollIndicator.style.display = 'none';
    }
}

// –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø
window.updateScrollIndicator = updateScrollIndicator;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
function forceUpdateCreditData() {
    console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –º–æ–¥—É–ª–µ–º v2
    syncCreditFromServer();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    updateCreditDisplay();
    updateFinancesDisplay();
    
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å table.html
    syncVariablesToTable();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    const status = checkCreditStatus();
    console.log('üìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–æ–≤:', status);
    
    return status;
}

// –î–æ–±–∞–≤–ª—è–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø
window.forceUpdateCreditData = forceUpdateCreditData;

