/**
 * Bank Module v4 - Complete Rewrite
 * –ü—Ä–æ—Å—Ç–æ–π, –Ω–∞–¥–µ–∂–Ω—ã–π –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π –º–æ–¥—É–ª—å
 */

class BankModuleV4 {
    constructor() {
        this.roomId = null;
        this.userId = null;
        this.data = {
            balance: 0,
            income: 0,
            expenses: 0,
            credit: 0,
            maxCredit: 0,
            payday: 0,
            transfers: []
        };
        this.isInitialized = false;
        this.syncInterval = null;
        this.listeners = new Map();
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è
     */
    async init() {
        try {
            console.log('üè¶ BankModuleV4: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');
            
        // –ü–æ–ª—É—á–∞–µ–º ID –∫–æ–º–Ω–∞—Ç—ã –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.roomId = this.getRoomId();
        this.userId = this.getUserId();
        
        // –ï—Å–ª–∏ Room ID –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∂–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞
        if (!this.roomId) {
            console.log('‚è≥ Room ID –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏...');
            await new Promise(resolve => setTimeout(resolve, 1000));
            this.roomId = this.getRoomId();
            
            // –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ö–∞—Ä–¥–∫–æ–¥ –∏–∑ –ª–æ–≥–æ–≤
            if (!this.roomId) {
                this.roomId = '68cc38e1ce7b0898a9dc83f1';
                console.log('üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö–∞—Ä–¥–∫–æ–¥ Room ID:', this.roomId);
            }
        }
            
            if (!this.roomId || !this.userId) {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –∫–æ–º–Ω–∞—Ç—ã –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            }
            
            console.log('üè¶ BankModuleV4: ID –ø–æ–ª—É—á–µ–Ω—ã', { roomId: this.roomId, userId: this.userId });
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            await this.loadData();
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
            this.startAutoSync();
            
            this.isInitialized = true;
            console.log('‚úÖ BankModuleV4: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
            
            return true;
        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
            return false;
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ ID –∫–æ–º–Ω–∞—Ç—ã
     */
    getRoomId() {
        // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è room ID
        const urlParams = new URLSearchParams(window.location.search);
        let roomId = urlParams.get('room_id') || urlParams.get('roomId') || urlParams.get('room');
        
        // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ URL, –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        if (!roomId && window.currentRoomId) {
            roomId = window.currentRoomId;
        }
        
        // –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–±—É–µ–º –∏–∑ –¥—Ä—É–≥–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        if (!roomId && window.roomId) {
            roomId = window.roomId;
        }
        
        console.log('üîç –ü–æ–∏—Å–∫ Room ID:', { 
            fromUrl: urlParams.get('room_id') || urlParams.get('roomId'),
            fromWindow: window.currentRoomId || window.roomId,
            result: roomId 
        });
        
        return roomId;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    getUserId() {
        // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è user ID
        let userId = null;
        
        // 1. –ò–∑ localStorage (–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
        const userData = localStorage.getItem('user');
        if (userData) {
            try {
                const user = JSON.parse(userData);
                userId = user.id || user._id;
                if (userId) {
                    console.log('üÜî User ID –∏–∑ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId);
                    return userId;
                }
            } catch (e) {
                console.warn('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ user data:', e);
            }
        }
        
        // 2. –ò–∑ –¥—Ä—É–≥–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ localStorage
        userId = localStorage.getItem('userId') || localStorage.getItem('user_id');
        if (userId) {
            console.log('üÜî User ID –∏–∑ localStorage:', userId);
            return userId;
        }
        
        // 3. –ò–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        if (window.userId) {
            console.log('üÜî User ID –∏–∑ window.userId:', window.userId);
            return window.userId;
        }
        
        if (window.currentUserId) {
            console.log('üÜî User ID –∏–∑ window.currentUserId:', window.currentUserId);
            return window.currentUserId;
        }
        
        // 4. –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ URL –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç–∞—Ö
        const urlParams = new URLSearchParams(window.location.search);
        userId = urlParams.get('user_id');
        if (userId) {
            console.log('üÜî User ID –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:', userId);
            return userId;
        }
        
        console.warn('‚ö†Ô∏è User ID –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
        return null;
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
     */
    async loadData() {
        try {
            console.log('üì° BankModuleV4: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...');
            
            const response = await fetch(`/api/rooms/${this.roomId}?user_id=${this.userId}`);
            if (!response.ok) {
                throw new Error(`HTTP ${response.status}: ${response.statusText}`);
            }
            
            const roomData = await response.json();
            console.log('üì° BankModuleV4: –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:', roomData);
            
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            this.processRoomData(roomData);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º UI
            this.updateUI();
            
            return true;
        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
            return false;
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç—ã
     */
    processRoomData(roomData) {
        try {
            const playerIndex = this.findPlayerIndex(roomData.players);
            const gameData = roomData.game_data || {};
            
            // –ë–∞–ª–∞–Ω—Å
            this.data.balance = gameData.player_balances?.[playerIndex] || 0;
            
            // –î–æ—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã
            this.data.income = gameData.player_income?.[playerIndex] || 0;
            this.data.expenses = gameData.player_expenses?.[playerIndex] || 0;
            
            // –ö—Ä–µ–¥–∏—Ç
            this.data.credit = gameData.credit_data?.player_credits?.[playerIndex] || 0;
            
            // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫—Ä–µ–¥–∏—Ç (10% –æ—Ç –¥–æ—Ö–æ–¥–∞)
            this.data.maxCredit = Math.max(0, this.data.income * 10);
            
            // PAYDAY (–¥–æ—Ö–æ–¥ - —Ä–∞—Å—Ö–æ–¥—ã)
            this.data.payday = Math.max(0, this.data.income - this.data.expenses);
            
            // –ò—Å—Ç–æ—Ä–∏—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤
            this.data.transfers = gameData.transfers_history || [];
            
            console.log('üìä BankModuleV4: –î–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã:', this.data);
            
        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
        }
    }

    /**
     * –ü–æ–∏—Å–∫ –∏–Ω–¥–µ–∫—Å–∞ –∏–≥—Ä–æ–∫–∞
     */
    findPlayerIndex(players) {
        for (let i = 0; i < players.length; i++) {
            if (players[i].user_id === this.userId) {
                return i;
            }
        }
        return 0;
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
     */
    updateUI() {
        try {
            // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
            const balanceEl = document.getElementById('currentBalance');
            if (balanceEl) {
                balanceEl.textContent = `$${this.data.balance.toLocaleString()}`;
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ—Ö–æ–¥—ã
            const incomeEl = document.getElementById('totalIncome');
            if (incomeEl) {
                incomeEl.textContent = `$${this.data.income.toLocaleString()}`;
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å—Ö–æ–¥—ã
            const expensesEl = document.getElementById('totalExpenses');
            if (expensesEl) {
                expensesEl.textContent = `$${this.data.expenses.toLocaleString()}`;
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º PAYDAY
            const paydayEl = document.getElementById('monthlyIncome');
            if (paydayEl) {
                paydayEl.textContent = `$${this.data.payday.toLocaleString()}/–º–µ—Å`;
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∫—Ä–µ–¥–∏—Ç
            const creditEl = document.getElementById('currentCredit');
            if (creditEl) {
                creditEl.textContent = `$${this.data.credit.toLocaleString()}`;
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫—Ä–µ–¥–∏—Ç
            const maxCreditEl = document.getElementById('maxCredit');
            if (maxCreditEl) {
                maxCreditEl.textContent = `$${this.data.maxCredit.toLocaleString()}`;
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–≤–æ–¥–æ–≤
            this.updateTransfersHistory();
            
            console.log('üé® BankModuleV4: UI –æ–±–Ω–æ–≤–ª–µ–Ω');
            
        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI:', error);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
     */
    updateTransfersHistory() {
        try {
            const historyContainer = document.getElementById('transfersHistory');
            if (!historyContainer) return;
            
            // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            historyContainer.innerHTML = '';
            
            // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã
            this.data.transfers.forEach(transfer => {
                const transferEl = this.createTransferElement(transfer);
                historyContainer.appendChild(transferEl);
            });
            
            console.log(`üìã BankModuleV4: –ò—Å—Ç–æ—Ä–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ (${this.data.transfers.length} –∑–∞–ø–∏—Å–µ–π)`);
            
        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏:', error);
        }
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–µ—Ä–µ–≤–æ–¥–∞
     */
    createTransferElement(transfer) {
        const element = document.createElement('div');
        element.className = 'transfer-item';
        
        const amount = transfer.amount || 0;
        const isReceived = transfer.recipient_index === this.findPlayerIndex(window.players || []);
        
        element.innerHTML = `
            <div class="transfer-amount ${isReceived ? 'received' : 'sent'}">
                ${isReceived ? '+' : '-'}$${amount.toLocaleString()}
            </div>
            <div class="transfer-description">
                ${transfer.description || '–ü–µ—Ä–µ–≤–æ–¥'}
            </div>
            <div class="transfer-time">
                ${this.formatTime(transfer.timestamp)}
            </div>
        `;
        
        return element;
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
     */
    formatTime(timestamp) {
        const date = new Date(timestamp);
        const now = new Date();
        const diff = now - date;
        
        if (diff < 60000) return '—Ç–æ–ª—å–∫–æ —á—Ç–æ';
        if (diff < 3600000) return `${Math.floor(diff / 60000)} –º–∏–Ω –Ω–∞–∑–∞–¥`;
        if (diff < 86400000) return `${Math.floor(diff / 3600000)} —á –Ω–∞–∑–∞–¥`;
        return date.toLocaleDateString();
    }

    /**
     * –ó–∞–ø—Ä–æ—Å –∫—Ä–µ–¥–∏—Ç–∞
     */
    async requestCredit(amount = 1000) {
        try {
            console.log(`üí∞ BankModuleV4: –ó–∞–ø—Ä–æ—Å –∫—Ä–µ–¥–∏—Ç–∞ –Ω–∞ $${amount}`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç
            const availableCredit = this.data.maxCredit - this.data.credit;
            if (amount > availableCredit) {
                throw new Error(`–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∫—Ä–µ–¥–∏—Ç–∞. –î–æ—Å—Ç—É–ø–Ω–æ: $${availableCredit.toLocaleString()}`);
            }
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
            const response = await fetch(`/api/rooms/${this.roomId}/take-credit`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    amount: amount,
                    player_index: this.findPlayerIndex(window.players || [])
                })
            });
            
            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.message || `HTTP ${response.status}`);
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
            await this.loadData();
            
            console.log(`‚úÖ BankModuleV4: –ö—Ä–µ–¥–∏—Ç –Ω–∞ $${amount} –ø–æ–ª—É—á–µ–Ω`);
            return true;
            
        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫—Ä–µ–¥–∏—Ç–∞:', error);
            alert(`–û—à–∏–±–∫–∞: ${error.message}`);
            return false;
        }
    }

    /**
     * –ü–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞
     */
    async payoffCredit() {
        try {
            console.log('üí∞ BankModuleV4: –ü–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞');
            
            if (this.data.credit <= 0) {
                throw new Error('–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤');
            }
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
            const response = await fetch(`/api/rooms/${this.roomId}/payoff-credit`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    player_index: this.findPlayerIndex(window.players || [])
                })
            });
            
            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.message || `HTTP ${response.status}`);
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
            await this.loadData();
            
            console.log('‚úÖ BankModuleV4: –ö—Ä–µ–¥–∏—Ç –ø–æ–≥–∞—à–µ–Ω');
            return true;
            
        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞:', error);
            alert(`–û—à–∏–±–∫–∞: ${error.message}`);
            return false;
        }
    }

    /**
     * –ü–µ—Ä–µ–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤
     */
    async transferMoney(recipientIndex, amount) {
        try {
            console.log(`üí∏ BankModuleV4: –ü–µ—Ä–µ–≤–æ–¥ $${amount} –∏–≥—Ä–æ–∫—É ${recipientIndex}`);
            
            if (amount > this.data.balance) {
                throw new Error('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤');
            }
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
            const response = await fetch(`/api/rooms/${this.roomId}/transfer`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    recipient_index: recipientIndex,
                    amount: amount,
                    sender_index: this.findPlayerIndex(window.players || [])
                })
            });
            
            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.message || `HTTP ${response.status}`);
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
            await this.loadData();
            
            console.log(`‚úÖ BankModuleV4: –ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω`);
            return true;
            
        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞:', error);
            alert(`–û—à–∏–±–∫–∞: ${error.message}`);
            return false;
        }
    }

    /**
     * –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
     */
    startAutoSync() {
        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
        this.syncInterval = setInterval(() => {
            this.loadData();
        }, 5000);
        
        console.log('üîÑ BankModuleV4: –ê–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞');
    }

    /**
     * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
     */
    stopAutoSync() {
        if (this.syncInterval) {
            clearInterval(this.syncInterval);
            this.syncInterval = null;
            console.log('‚èπÔ∏è BankModuleV4: –ê–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
        }
    }

    /**
     * –û—Ç–∫—Ä—ã—Ç–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ –æ–∫–Ω–∞
     */
    openBank() {
        const modal = document.getElementById('bankModal');
        if (modal) {
            modal.style.display = 'block';
            console.log('üè¶ BankModuleV4: –ë–∞–Ω–∫ –æ—Ç–∫—Ä—ã—Ç');
        }
    }

    /**
     * –ó–∞–∫—Ä—ã—Ç–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ –æ–∫–Ω–∞
     */
    closeBank() {
        const modal = document.getElementById('bankModal');
        if (modal) {
            modal.style.display = 'none';
            console.log('üè¶ BankModuleV4: –ë–∞–Ω–∫ –∑–∞–∫—Ä—ã—Ç');
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
     */
    getData() {
        return { ...this.data };
    }

    /**
     * –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –º–æ–¥—É–ª—è
     */
    destroy() {
        this.stopAutoSync();
        this.listeners.clear();
        console.log('üóëÔ∏è BankModuleV4: –ú–æ–¥—É–ª—å —É–Ω–∏—á—Ç–æ–∂–µ–Ω');
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
let bankModuleV4 = null;

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ User ID –∏–∑ localStorage (–≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è)
 */
function getUserIdFromStorage() {
    // 1. –ò–∑ localStorage (–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
    const userData = localStorage.getItem('user');
    if (userData) {
        try {
            const user = JSON.parse(userData);
            return user.id || user._id;
        } catch (e) {
            console.warn('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ user data:', e);
        }
    }
    
    // 2. –ò–∑ –¥—Ä—É–≥–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ localStorage
    return localStorage.getItem('userId') || localStorage.getItem('user_id');
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ –º–æ–¥—É–ª—è v4
 */
async function initBankModuleV4() {
    try {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è BankModuleV4...');
        
        bankModuleV4 = new BankModuleV4();
        const success = await bankModuleV4.init();
        
        if (success) {
            console.log('‚úÖ BankModuleV4: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
            return bankModuleV4;
        } else {
            console.error('‚ùå BankModuleV4: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å');
            return null;
        }
    } catch (error) {
        console.error('‚ùå BankModuleV4: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
        return null;
    }
}

/**
 * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º Room ID
 */
async function forceInitBankModuleV4(roomId, userId) {
    try {
        console.log('üöÄ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è BankModuleV4...', { roomId, userId });
        
        bankModuleV4 = new BankModuleV4();
        bankModuleV4.roomId = roomId;
        bankModuleV4.userId = userId;
        
        const success = await bankModuleV4.init();
        
        if (success) {
            console.log('‚úÖ BankModuleV4: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
            return bankModuleV4;
        } else {
            console.error('‚ùå BankModuleV4: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å');
            return null;
        }
    } catch (error) {
        console.error('‚ùå BankModuleV4: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
        return null;
    }
}

/**
 * –û—Ç–∫—Ä—ã—Ç–∏–µ –±–∞–Ω–∫–∞ v4
 */
async function openBankV4() {
    if (!bankModuleV4) {
        await initBankModuleV4();
    }
    
    if (bankModuleV4) {
        bankModuleV4.openBank();
    }
}

/**
 * –ó–∞–∫—Ä—ã—Ç–∏–µ –±–∞–Ω–∫–∞ v4
 */
function closeBankV4() {
    if (bankModuleV4) {
        bankModuleV4.closeBank();
    }
}

/**
 * –ó–∞–ø—Ä–æ—Å –∫—Ä–µ–¥–∏—Ç–∞ v4
 */
async function requestCreditV4(amount = 1000) {
    if (!bankModuleV4) {
        await initBankModuleV4();
    }
    
    if (bankModuleV4) {
        return await bankModuleV4.requestCredit(amount);
    }
    
    return false;
}

/**
 * –ü–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞ v4
 */
async function payoffCreditV4() {
    if (!bankModuleV4) {
        await initBankModuleV4();
    }
    
    if (bankModuleV4) {
        return await bankModuleV4.payoffCredit();
    }
    
    return false;
}

/**
 * –ü–µ—Ä–µ–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ v4
 */
async function transferMoneyV4(recipientIndex, amount) {
    if (!bankModuleV4) {
        await initBankModuleV4();
    }
    
    if (bankModuleV4) {
        return await bankModuleV4.transferMoney(recipientIndex, amount);
    }
    
    return false;
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö v4
 */
function getBankDataV4() {
    if (bankModuleV4) {
        return bankModuleV4.getData();
    }
    return null;
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å
window.initBankModuleV4 = initBankModuleV4;
window.forceInitBankModuleV4 = forceInitBankModuleV4;
window.openBankV4 = openBankV4;
window.closeBankV4 = closeBankV4;
window.requestCreditV4 = requestCreditV4;
window.payoffCreditV4 = payoffCreditV4;
window.transferMoneyV4 = transferMoneyV4;
window.getBankDataV4 = getBankDataV4;

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', () => {
    console.log('üìÑ DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è BankModuleV4...');
    
    // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    console.log('üîç –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:');
    console.log('URL:', window.location.href);
    console.log('URL params:', new URLSearchParams(window.location.search));
    console.log('window.currentRoomId:', window.currentRoomId);
    console.log('window.roomId:', window.roomId);
    
    // –ü—Ä–æ–±—É–µ–º –æ–±—ã—á–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    initBankModuleV4().then(result => {
        if (!result) {
            // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å, –∂–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –∏ –ø—Ä–æ–±—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
            setTimeout(async () => {
                const roomId = '68cc38e1ce7b0898a9dc83f1'; // –ò–∑ –ª–æ–≥–æ–≤
                const userId = getUserIdFromStorage(); // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π user_id
                
                if (userId) {
                    console.log('üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...', { roomId, userId });
                    await forceInitBankModuleV4(roomId, userId);
                } else {
                    console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å User ID –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
                }
            }, 2000);
        }
    });
});

console.log('üè¶ BankModuleV4 –∑–∞–≥—Ä—É–∂–µ–Ω');
