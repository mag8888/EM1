/**
 * Bank Module v4 - Complete Rewrite
 * –ü—Ä–æ—Å—Ç–æ–π, –Ω–∞–¥–µ–∂–Ω—ã–π –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π –º–æ–¥—É–ª—å
 * VERSION: 4.1-DEBUG (—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π –±–∞–ª–∞–Ω—Å–∞)
 */

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const CREDIT_MULTIPLIER = 10; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫—Ä–µ–¥–∏—Ç = PAYDAY * 10

class BankModuleV4 {
    constructor() {
        console.log('üè¶ BankModuleV4 v4.1-DEBUG: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è');
        this.roomId = null;
        this.userId = null;
        this.playerName = null;
        this.playerIndex = 0;
        this.players = [];
        this.data = {
            balance: 0,
            income: 0,
            expenses: 0,
            credit: 0,
            maxCredit: 0,
            payday: 0,
            transfers: []
        };
        this.isInitialized = false;
        this.isInitializing = false;
        this.syncInterval = null;
        this.listeners = new Map();
        this.isLoading = false;
        this.lastLoadTime = 0;
        this.loadDebounceTimer = null;
        this.cache = {
            data: null,
            timestamp: 0,
            ttl: 3000 // 3 seconds cache TTL
        };
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è
     */
    async init() {
        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
        if (this.isInitialized || this.isInitializing) {
            console.log('‚è≥ BankModuleV4: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
            return this.isInitialized;
        }

        this.isInitializing = true;
        
        try {
            console.log('üè¶ BankModuleV4: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');
            
        // –ü–æ–ª—É—á–∞–µ–º ID –∫–æ–º–Ω–∞—Ç—ã –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.roomId = this.getRoomId();
        this.userId = this.getUserId();
        
        // –ï—Å–ª–∏ Room ID –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∂–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞
        if (!this.roomId) {
            console.log('‚è≥ Room ID –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ gameState...');
            await new Promise(resolve => setTimeout(resolve, 1000));
            this.roomId = this.getRoomId();
            
            // –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∂–¥–µ–º –µ—â–µ –Ω–µ–º–Ω–æ–≥–æ
            if (!this.roomId) {
                console.log('‚è≥ Room ID –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ–∂–∏–¥–∞–µ–º –µ—â–µ...');
                await new Promise(resolve => setTimeout(resolve, 2000));
                this.roomId = this.getRoomId();
            }
        }
            
            if (!this.roomId || !this.userId) {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –∫–æ–º–Ω–∞—Ç—ã –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            }
            
            console.log('üè¶ BankModuleV4: ID –ø–æ–ª—É—á–µ–Ω—ã', { roomId: this.roomId, userId: this.userId });
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            await this.loadData(true);
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
            this.startAutoSync();
            
            this.isInitialized = true;
            this.isInitializing = false;
            console.log('‚úÖ BankModuleV4: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
            
            return true;
        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
            this.isInitializing = false;
            return false;
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ ID –∫–æ–º–Ω–∞—Ç—ã
     */
    getRoomId() {
        // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è room ID
        const urlParams = new URLSearchParams(window.location.search);
        let roomId = urlParams.get('room_id') || urlParams.get('roomId') || urlParams.get('room');
        
        // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ URL, –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        if (!roomId && window.currentRoomId) {
            roomId = window.currentRoomId;
        }
        
        // –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–±—É–µ–º –∏–∑ –¥—Ä—É–≥–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        if (!roomId && window.roomId) {
            roomId = window.roomId;
        }
        
        // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ gameState (–æ—Å–Ω–æ–≤–Ω–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫ –≤ –∏–≥—Ä–µ)
        if (!roomId && window.gameState?.roomId) {
            roomId = window.gameState.roomId;
        }
        
        // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ gameState.state
        if (!roomId && window.gameState?.state?.roomId) {
            roomId = window.gameState.state.roomId;
        }
        
        console.log('üîç –ü–æ–∏—Å–∫ Room ID:', { 
            fromUrl: urlParams.get('room_id') || urlParams.get('roomId'),
            fromWindow: window.currentRoomId || window.roomId,
            fromGameState: window.gameState?.roomId,
            fromGameStateState: window.gameState?.state?.roomId,
            result: roomId 
        });
        
        return roomId;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    getUserId() {
        // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è user ID
        let userId = null;
        
        // 1. –ò–∑ localStorage (–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
        const userData = localStorage.getItem('user');
        if (userData) {
            try {
                const user = JSON.parse(userData);
                userId = user.id || user._id;
                if (userId) {
                    console.log('üÜî User ID –∏–∑ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId);
                    return userId;
                }
            } catch (e) {
                console.warn('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ user data:', e);
            }
        }
        
        // 2. –ò–∑ –¥—Ä—É–≥–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ localStorage
        userId = localStorage.getItem('userId') || localStorage.getItem('user_id');
        if (userId) {
            console.log('üÜî User ID –∏–∑ localStorage:', userId);
            return userId;
        }
        
        // 3. –ò–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        if (window.userId) {
            console.log('üÜî User ID –∏–∑ window.userId:', window.userId);
            return window.userId;
        }
        
        if (window.currentUserId) {
            console.log('üÜî User ID –∏–∑ window.currentUserId:', window.currentUserId);
            return window.currentUserId;
        }
        
        // 4. –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ URL –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç–∞—Ö
        const urlParams = new URLSearchParams(window.location.search);
        userId = urlParams.get('user_id');
        if (userId) {
            console.log('üÜî User ID –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:', userId);
            return userId;
        }
        
        console.warn('‚ö†Ô∏è User ID –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
        return null;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
     */
    getStoredUserInfo() {
        try {
            const raw = localStorage.getItem('user');
            if (raw) {
                return JSON.parse(raw);
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è BankModuleV4: –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ user –∏–∑ localStorage', error);
        }
        return null;
    }

    /**
     * –ü—Ä–æ–∫—Å–∏-—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤ —á–µ—Ä–µ–∑ –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
     */
    async makeApiRequest(endpoint, options = {}) {
        try {
            const baseUrl = window.location.origin; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–π origin (localhost:3000)
            const url = `${baseUrl}${endpoint}`;
            
            console.log('üì° BankModuleV4: API Request:', {
                endpoint,
                url,
                method: options.method || 'GET',
                body: options.body
            });
            
            const response = await fetch(url, {
                ...options,
                headers: {
                    'Content-Type': 'application/json',
                    ...options.headers
                }
            });
            
            console.log('üì° BankModuleV4: API Response:', {
                status: response.status,
                statusText: response.statusText,
                url: response.url
            });
            
            if (!response.ok) {
                throw new Error(`HTTP ${response.status}: ${response.statusText}`);
            }
            
            return response;
        } catch (error) {
            console.error('‚ùå BankModuleV4: API Request Error:', error);
            throw error;
        }
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞ (—Å –¥–µ–±–∞—É–Ω—Å–∏–Ω–≥–æ–º)
     */
    async loadData(force = false) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à, –µ—Å–ª–∏ –Ω–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
        if (!force && this.cache.data && (Date.now() - this.cache.timestamp) < this.cache.ttl) {
            console.log('üì¶ BankModuleV4: –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
            this.updateDataFromCache();
            return true;
        }

        // –î–µ–±–∞—É–Ω—Å–∏–Ω–≥ - –æ—Ç–º–µ–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∑–∞–ø—Ä–æ—Å –µ—Å–ª–∏ –æ–Ω –µ—â–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
        if (this.loadDebounceTimer) {
            clearTimeout(this.loadDebounceTimer);
        }

        // –ï—Å–ª–∏ —É–∂–µ –∑–∞–≥—Ä—É–∂–∞–µ–º, –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        if (this.isLoading) {
            console.log('‚è≥ BankModuleV4: –ó–∞–≥—Ä—É–∑–∫–∞ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
            return false;
        }

        return new Promise((resolve) => {
            this.loadDebounceTimer = setTimeout(async () => {
                try {
                    await this._loadDataInternal();
                    resolve(true);
                } catch (error) {
                    console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
                    resolve(false);
                }
            }, 100); // 100ms –¥–µ–±–∞—É–Ω—Å
        });
    }

    /**
     * –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
     */
    async _loadDataInternal() {
        this.isLoading = true;
        this.lastLoadTime = Date.now();
        
        try {
            if (!this.roomId || !this.userId) {
                throw new Error('–ù–µ –∑–∞–¥–∞–Ω—ã –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –∫–æ–º–Ω–∞—Ç—ã –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            }

            console.log('üì° BankModuleV4: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä –±–∞–Ω–∫–∞...', {
                roomId: this.roomId,
                userId: this.userId
            });

            // 1. –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–Ω–∞—Ç–µ –∏ –∏–≥—Ä–æ–∫–∞—Ö
            const roomResponse = await this.makeApiRequest(`/api/rooms/${this.roomId}?user_id=${this.userId}`);
            
            if (roomResponse.status === 404) {
                console.warn('‚ö†Ô∏è BankModuleV4: –ö–æ–º–Ω–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, —Ä–∞–±–æ—Ç–∞–µ–º –≤ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ');
                return this.loadOfflineData();
            }
            
            const roomPayload = await roomResponse.json();
            const room = roomPayload?.room || roomPayload;
            console.log('üì° BankModuleV4: –î–∞–Ω–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã', room);

            // 2. –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–æ–∫–∞—Ö –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
            this.processRoomData(room);

            if (!this.playerName) {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏–º—è –∏–≥—Ä–æ–∫–∞');
            }

            const encodedName = encodeURIComponent(this.playerName);

            // 3. –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
            const [balanceRes, financialsRes, historyRes, creditRes] = await Promise.all([
                this.makeApiRequest(`/api/bank/balance/${encodedName}/${this.roomId}`),
                this.makeApiRequest(`/api/bank/financials/${encodedName}/${this.roomId}`),
                this.makeApiRequest(`/api/bank/history/${this.roomId}`),
                this.makeApiRequest(`/api/bank/credit/status/${encodedName}/${this.roomId}`)
            ]);

            const [balanceData, financialsData, historyData, creditData] = await Promise.all([
                balanceRes.json(),
                financialsRes.json(),
                historyRes.json(),
                creditRes.json()
            ]);

            console.log('üìä BankModuleV4: –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã', {
                balanceData,
                financialsData,
                historyData,
                creditData
            });

            // 4. –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥—É–ª—è
            const salary = Number(financialsData?.salary || 0);
            const passiveIncome = Number(financialsData?.passiveIncome || 0);
            const totalIncome = Number.isFinite(salary + passiveIncome) ? salary + passiveIncome : 0;
            const totalExpenses = Number(financialsData?.totalExpenses || 0);
            const netIncome = Number(financialsData?.netIncome ?? (totalIncome - totalExpenses));

            this.data.balance = Number(balanceData?.amount || 0);
            this.data.income = totalIncome;
            this.data.passiveIncome = passiveIncome; // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ –æ—Ç–¥–µ–ª—å–Ω–æ
            this.data.expenses = totalExpenses;
            this.data.payday = Number.isFinite(netIncome) ? netIncome : Math.max(0, totalIncome - totalExpenses);
            this.data.credit = Number(creditData?.loanAmount || 0);
            this.data.maxCredit = Number(creditData?.maxAvailable || Math.max(0, this.data.payday * CREDIT_MULTIPLIER));
            this.data.transfers = Array.isArray(historyData) ? historyData : [];
            
            // 5. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å DataStore, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
            if (window.dataStore) {
                // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º DataStore, –µ—Å–ª–∏ –µ—â–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
                if (!window.dataStore.isReady()) {
                    window.dataStore.initialize();
                }
                
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–≥—Ä–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                if (this.roomId && this.playerName) {
                    window.dataStore.setGameInfo(this.roomId, this.playerName, this.userId);
                }
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ DataStore
                window.dataStore.update({
                    balance: this.data.balance,
                    income: this.data.income,
                    passiveIncome: this.data.passiveIncome,
                    expenses: this.data.expenses,
                    payday: this.data.payday,
                    credit: this.data.credit,
                    maxCredit: this.data.maxCredit,
                    transfers: this.data.transfers
                });
                
                console.log('üîÑ BankModuleV4: –î–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å DataStore', {
                    balance: this.data.balance,
                    income: this.data.income,
                    expenses: this.data.expenses,
                    payday: this.data.payday,
                    credit: this.data.credit
                });
            } else {
                console.warn('‚ö†Ô∏è BankModuleV4: DataStore –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
            }

            // 6. –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à
            this.cache.data = { ...this.data };
            this.cache.timestamp = Date.now();

            // 7. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –±–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞ –≤ –∏–≥—Ä–µ
            this.syncPlayerBalanceInGame();

            // 8. –û–±–Ω–æ–≤–ª—è–µ–º UI –∏ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
            this.updateUI();
            this.initRecipientsList();

            return true;
        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
            
            // –ü—Ä–∏ –æ—à–∏–±–∫–µ API –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ñ–ª–∞–π–Ω –¥–∞–Ω–Ω—ã–µ
            console.log('üîÑ BankModuleV4: –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º');
            try {
                await this.loadOfflineData();
                return true;
            } catch (offlineError) {
                console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–∞:', offlineError);
            return false;
            }
        } finally {
            this.isLoading = false;
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫—ç—à–∞
     */
    updateDataFromCache() {
        if (this.cache.data) {
            this.data = { ...this.cache.data };
            this.syncPlayerBalanceInGame();
            this.updateUI();
        }
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ (–∫–æ–≥–¥–∞ –∫–æ–º–Ω–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
     */
    async loadOfflineData() {
        try {
            console.log('üì± BankModuleV4: –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ñ–ª–∞–π–Ω –¥–∞–Ω–Ω—ã—Ö...');
            
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
            const storedUser = this.getStoredUserInfo();
            if (!storedUser) {
                throw new Error('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ localStorage');
            }
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–º—è –∏–≥—Ä–æ–∫–∞
            this.playerName = storedUser.username || storedUser.name || '–ò–≥—Ä–æ–∫';
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            this.data.balance = Number(localStorage.getItem('playerBalance') || 10000);
            this.data.income = Number(localStorage.getItem('playerIncome') || 0);
            this.data.expenses = Number(localStorage.getItem('playerExpenses') || 0);
            this.data.payday = Math.max(0, this.data.income - this.data.expenses);
            this.data.credit = Number(localStorage.getItem('playerCredit') || 0);
            this.data.maxCredit = Math.max(0, this.data.payday * CREDIT_MULTIPLIER);
            this.data.transfers = JSON.parse(localStorage.getItem('playerTransfers') || '[]');
            
            // –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
            this.players = [
                { name: this.playerName, userId: this.userId, username: this.playerName }
            ];
            window.players = this.players;
            
            // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –±–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞ –≤ –∏–≥—Ä–µ
            this.syncPlayerBalanceInGame();
            
            // –û–±–Ω–æ–≤–ª—è–µ–º UI
            this.updateUI();
            if (typeof window.initRecipientsList === 'function') {
                window.initRecipientsList();
            }
            
            console.log('‚úÖ BankModuleV4: –û—Ñ–ª–∞–π–Ω –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã', this.data);
            return true;
            
        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ñ–ª–∞–π–Ω –¥–∞–Ω–Ω—ã—Ö:', error);
            return false;
        }
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ localStorage –¥–ª—è –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–∞
     */
    saveToLocalStorage() {
        try {
            localStorage.setItem('playerBalance', this.data.balance.toString());
            localStorage.setItem('playerIncome', this.data.income.toString());
            localStorage.setItem('playerExpenses', this.data.expenses.toString());
            localStorage.setItem('playerCredit', this.data.credit.toString());
            localStorage.setItem('playerTransfers', JSON.stringify(this.data.transfers));
            console.log('üíæ BankModuleV4: –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ localStorage');
        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ localStorage:', error);
        }
    }

    /**
     * –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –±–∞–ª–∞–Ω—Å–∞ –∏–≥—Ä–æ–∫–∞ –≤ –∏–≥—Ä–µ
     */
    syncPlayerBalanceInGame() {
        try {
            if (!this.playerName || !this.data.balance) return;

            // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∏–≥—Ä—ã
            if (window.gameState?.state?.players) {
                const player = window.gameState.state.players.find(p => 
                    p.name === this.playerName || 
                    p.username === this.playerName ||
                    String(p.userId) === String(this.userId)
                );
                
                if (player) {
                    const oldBalance = player.cash || 0;
                    player.cash = this.data.balance;
                    console.log(`üîÑ BankModuleV4: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –±–∞–ª–∞–Ω—Å–∞ –∏–≥—Ä–æ–∫–∞ ${this.playerName}: $${oldBalance} ‚Üí $${this.data.balance}`);
                }
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –≤ –º–∞—Å—Å–∏–≤–µ –∏–≥—Ä–æ–∫–æ–≤
            if (window.players && Array.isArray(window.players)) {
                const player = window.players.find(p => 
                    p.name === this.playerName || 
                    p.username === this.playerName ||
                    String(p.userId) === String(this.userId)
                );
                
                if (player) {
                    const oldBalance = player.cash || 0;
                    player.cash = this.data.balance;
                    console.log(`üîÑ BankModuleV4: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤ –º–∞—Å—Å–∏–≤–µ –∏–≥—Ä–æ–∫–æ–≤ ${this.playerName}: $${oldBalance} ‚Üí $${this.data.balance}`);
                }
            }

        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –±–∞–ª–∞–Ω—Å–∞ –∏–≥—Ä–æ–∫–∞:', error);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç—ã
     */
    processRoomData(roomData) {
        try {
            const room = roomData || {};
            this.players = Array.isArray(room.players) ? room.players : [];
            window.players = this.players;

            const resolvedIndex = this.findPlayerIndex(this.players);
            this.playerIndex = resolvedIndex >= 0 ? resolvedIndex : 0;

            const playerFromRoom = this.players[this.playerIndex] || null;
            const storedUser = this.getStoredUserInfo();

            const resolvedName = playerFromRoom?.name ||
                storedUser?.username ||
                storedUser?.name ||
                localStorage.getItem('username');

            this.playerName = resolvedName || this.playerName || playerFromRoom?.userId || null;

            console.log('üìä BankModuleV4: –ò–≥—Ä–æ–∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω', {
                playerIndex: this.playerIndex,
                playerName: this.playerName,
                playersCount: this.players.length
            });

        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç—ã:', error);
        }
    }

    /**
     * –ü–æ–∏—Å–∫ –∏–Ω–¥–µ–∫—Å–∞ –∏–≥—Ä–æ–∫–∞
     */
    findPlayerIndex(players) {
        for (let i = 0; i < players.length; i++) {
            if (players[i].user_id === this.userId) {
                return i;
            }
            if (players[i].userId === this.userId) {
                return i;
            }
        }
        return -1;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–µ—Ç–µ–π —É –∏–≥—Ä–æ–∫–∞
     */
    getChildrenCount() {
        try {
            // –ò—â–µ–º –∏–≥—Ä–æ–∫–∞ –≤ –∫–æ–º–Ω–∞—Ç–µ
            const room = window.gameState?.state?.room || window.gameState?.room;
            if (!room || !room.players) return 0;
            
            const player = room.players.find(p => 
                p.name === this.playerName || 
                p.username === this.playerName ||
                String(p.userId) === String(this.userId)
            );
            
            if (player) {
                return Math.min(Number(player.children || 0), 3); // –ú–∞–∫—Å–∏–º—É–º 3 —Ä–µ–±–µ–Ω–∫–∞
            }
            
            return 0;
        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–µ—Ç–µ–π:', error);
            return 0;
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É–º–º—ã –∫—Ä–µ–¥–∏—Ç–∞ –ø–æ —Ç–∏–ø—É
     */
    getLoanAmount(loanType) {
        const loanData = this.data.loans || {};
        const loanAmounts = {
            car: 700,
            education: 500,
            mortgage: 1200,
            creditCards: 1000
        };
        
        return loanData[loanType] !== false ? loanAmounts[loanType] : 0;
    }

    /**
     * –†–∞—Å—á–µ—Ç –æ–±—â–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤
     */
    getTotalExpenses() {
        const taxes = 1300;
        const otherExpenses = 1500;
        const carLoan = this.getLoanAmount('car');
        const educationLoan = this.getLoanAmount('education');
        const mortgage = this.getLoanAmount('mortgage');
        const creditCards = this.getLoanAmount('creditCards');
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –∫—Ä–µ–¥–∏—Ç –∫–∞–∫ –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂
        const currentCreditPayment = Math.floor(this.data.credit / 1000) * 100;
        
        return taxes + otherExpenses + carLoan + educationLoan + mortgage + creditCards + currentCreditPayment;
    }

    /**
     * –ü–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞
     */
    async payoffLoan(loanType) {
        const payoffAmounts = {
            car: 14000,
            education: 10000,
            mortgage: 120000,
            creditCards: 10000
        };
        
        const payoffAmount = payoffAmounts[loanType];
        const currentBalance = this.data.balance;
        
        if (currentBalance < payoffAmount) {
            alert(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–≥–∞—à–µ–Ω–∏—è! –ù—É–∂–Ω–æ: $${payoffAmount.toLocaleString()}, –¥–æ—Å—Ç—É–ø–Ω–æ: $${currentBalance.toLocaleString()}`);
            return;
        }
        
        if (!confirm(`–ü–æ–≥–∞—Å–∏—Ç—å ${this.getLoanName(loanType)} –∑–∞ $${payoffAmount.toLocaleString()}?`)) {
            return;
        }
        
        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–≥–∞—à–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞
            const response = await fetch(`/api/bank/loans/payoff`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    roomId: this.roomId,
                    username: this.playerName,
                    loanType: loanType,
                    amount: payoffAmount
                })
            });
            
            if (response.ok) {
                const result = await response.json();
                if (result.success) {
                    // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                    if (!this.data.loans) this.data.loans = {};
                    this.data.loans[loanType] = false; // –ö—Ä–µ–¥–∏—Ç –ø–æ–≥–∞—à–µ–Ω
                    this.data.balance -= payoffAmount;
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º UI
                    this.updateUI();
                    
                    alert(`–ö—Ä–µ–¥–∏—Ç ${this.getLoanName(loanType)} —É—Å–ø–µ—à–Ω–æ –ø–æ–≥–∞—à–µ–Ω!`);
                } else {
                    alert(`–û—à–∏–±–∫–∞: ${result.message}`);
                }
            } else {
                alert('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –ø–æ–≥–∞—à–µ–Ω–∏–∏ –∫—Ä–µ–¥–∏—Ç–∞');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞:', error);
            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≥–∞—à–µ–Ω–∏–∏ –∫—Ä–µ–¥–∏—Ç–∞');
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞
     */
    getLoanName(loanType) {
        const names = {
            car: '–ö—Ä–µ–¥–∏—Ç –Ω–∞ –∞–≤—Ç–æ',
            education: '–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∫—Ä–µ–¥–∏—Ç',
            mortgage: '–ò–ø–æ—Ç–µ–∫–∞',
            creditCards: '–ö—Ä–µ–¥–∏—Ç–Ω—ã–µ –∫–∞—Ä—Ç—ã'
        };
        return names[loanType] || loanType;
    }

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –¥–æ—Ö–æ–¥–æ–≤
     */
    toggleIncomeDetails() {
        const details = document.getElementById('incomeDetails');
        const icon = document.getElementById('incomeExpandIcon');
        
        if (details && icon) {
            if (details.style.display === 'none') {
                details.style.display = 'block';
                icon.textContent = '‚ñº';
            } else {
                details.style.display = 'none';
                icon.textContent = '‚ñ∂';
            }
        }
    }

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π —Ä–∞—Å—Ö–æ–¥–æ–≤
     */
    toggleExpensesDetails() {
        const details = document.getElementById('expensesDetails');
        const icon = document.getElementById('expensesExpandIcon');
        
        if (details && icon) {
            if (details.style.display === 'none') {
                details.style.display = 'block';
                icon.textContent = '‚ñº';
            } else {
                details.style.display = 'none';
                icon.textContent = '‚ñ∂';
            }
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
     */
    updateUI() {
        try {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
            const recipientSelect = document.getElementById('recipientSelect');
            const amountInput = document.getElementById('transferAmount');
            const creditAmountInput = document.getElementById('creditAmount');
            
            const currentRecipient = recipientSelect?.value || '';
            const currentAmount = amountInput?.value || '';
            const currentCreditAmount = creditAmountInput?.value || '';

            // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
            const balanceEl = document.getElementById('currentBalance');
            if (balanceEl) {
                balanceEl.textContent = `$${this.data.balance.toLocaleString()}`;
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–µ—Ç–∞–ª–∏
            const salaryEl = document.getElementById('salaryAmount');
            if (salaryEl) {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–∑–æ–≤—É—é –∑–∞—Ä–ø–ª–∞—Ç—É $10,000
                salaryEl.textContent = `$${(10000).toLocaleString()}`;
            }
            
            const passiveIncomeEl = document.getElementById('passiveIncomeAmount');
            if (passiveIncomeEl) {
                passiveIncomeEl.textContent = `$0`; // –ü–æ–∫–∞ –Ω–µ—Ç –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã
            const currentCreditEl = document.getElementById('currentCreditAmount');
            if (currentCreditEl) {
                // –ö–∞–∂–¥—ã–µ $1000 –∫—Ä–µ–¥–∏—Ç–∞ = $100/–º–µ—Å –ø–ª–∞—Ç–µ–∂
                const monthlyPayment = Math.floor(this.data.credit / 1000) * 100;
                currentCreditEl.textContent = `$${monthlyPayment.toLocaleString()}`;
            }
            
            const taxesEl = document.getElementById('taxesAmount');
            if (taxesEl) {
                taxesEl.textContent = `$1,300`;
            }
            
            const otherExpensesEl = document.getElementById('otherExpensesAmount');
            if (otherExpensesEl) {
                otherExpensesEl.textContent = `$1,500`;
            }
            
            const carLoanEl = document.getElementById('carLoanAmount');
            if (carLoanEl) {
                carLoanEl.textContent = `$${this.getLoanAmount('car')}`;
            }
            
            const educationLoanEl = document.getElementById('educationLoanAmount');
            if (educationLoanEl) {
                educationLoanEl.textContent = `$${this.getLoanAmount('education')}`;
            }
            
            const mortgageEl = document.getElementById('mortgageAmount');
            if (mortgageEl) {
                mortgageEl.textContent = `$${this.getLoanAmount('mortgage')}`;
            }
            
            const creditCardsEl = document.getElementById('creditCardsAmount');
            if (creditCardsEl) {
                creditCardsEl.textContent = `$${this.getLoanAmount('creditCards')}`;
            }
            
            const childrenExpensesEl = document.getElementById('childrenExpensesAmount');
            if (childrenExpensesEl) {
                const childrenCount = this.getChildrenCount();
                const childrenExpenses = childrenCount * 400;
                childrenExpensesEl.textContent = `$${childrenExpenses.toLocaleString()}`;
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–µ —Å—É–º–º—ã –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
            const totalIncomeEl = document.getElementById('totalIncomeAmount');
            if (totalIncomeEl) {
                const income = Number(this.data.income || 0);
                const passiveIncome = Number(this.data.passiveIncome || 0);
                const totalIncome = income + passiveIncome;
                totalIncomeEl.textContent = `$${totalIncome.toLocaleString()}`;
            }
            
            const totalExpensesEl = document.getElementById('totalExpensesAmount');
            if (totalExpensesEl) {
                const childrenCount = this.getChildrenCount();
                const childrenExpenses = childrenCount * 400;
                const totalExpenses = this.getTotalExpenses() + childrenExpenses;
                totalExpensesEl.textContent = `$${totalExpenses.toLocaleString()}`;
            }
            
            const netIncomeEl = document.getElementById('netIncomeAmount');
            if (netIncomeEl) {
                const childrenCount = this.getChildrenCount();
                const childrenExpenses = childrenCount * 400;
                const income = Number(this.data.income || 0);
                const passiveIncome = Number(this.data.passiveIncome || 0);
                // –ß–∏—Å—Ç—ã–π –¥–æ—Ö–æ–¥ = –¥–æ—Ö–æ–¥—ã - –≤—Å–µ —Ä–∞—Å—Ö–æ–¥—ã (–≤–∫–ª—é—á–∞—è —à—Ç—Ä–∞—Ñ –ø–æ –∫—Ä–µ–¥–∏—Ç—É)
                const totalExpenses = this.getTotalExpenses() + childrenExpenses;
                const netIncome = (income + passiveIncome) - totalExpenses;
                netIncomeEl.textContent = `$${netIncome.toLocaleString()}`;
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º PAYDAY
            const paydayEl = document.getElementById('paydayAmount');
            if (paydayEl) {
                const childrenCount = this.getChildrenCount();
                const childrenExpenses = childrenCount * 400;
                const income = Number(this.data.income || 0);
                const passiveIncome = Number(this.data.passiveIncome || 0);
                // PAYDAY = –¥–æ—Ö–æ–¥—ã - –≤—Å–µ —Ä–∞—Å—Ö–æ–¥—ã (–≤–∫–ª—é—á–∞—è —à—Ç—Ä–∞—Ñ –ø–æ –∫—Ä–µ–¥–∏—Ç—É)
                const totalExpenses = this.getTotalExpenses() + childrenExpenses;
                const payday = (income + passiveIncome) - totalExpenses;
                paydayEl.textContent = `$${payday.toLocaleString()}/–º–µ—Å`;
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∫—Ä–µ–¥–∏—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            const currentDebtEl = document.getElementById('currentDebt');
            if (currentDebtEl) {
                currentDebtEl.textContent = `$${(this.data.credit || 0).toLocaleString()}`;
            }
            
            
            // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –æ–±–µ–∏—Ö –ø–æ–ª–µ–π
            const childrenCount = this.getChildrenCount();
            const childrenExpenses = childrenCount * 400;
            const income = Number(this.data.income || 0);
            const passiveIncome = Number(this.data.passiveIncome || 0);
            // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –æ—Ç –±–∞–∑–æ–≤–æ–≥–æ PAYDAY –±–µ–∑ —É—á–µ—Ç–∞ —Ç–µ–∫—É—â–µ–≥–æ –∫—Ä–µ–¥–∏—Ç–∞
            // –ò—Å–∫–ª—é—á–∞–µ–º —à—Ç—Ä–∞—Ñ –ø–æ –∫—Ä–µ–¥–∏—Ç—É –∏–∑ —Ä–∞—Å—á–µ—Ç–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞
            const creditPenalty = Math.floor((this.data.credit || 0) / 1000) * 100;
            const baseExpenses = this.getTotalExpenses() + childrenExpenses;
            const baseNetIncome = (income + passiveIncome) - baseExpenses + creditPenalty;
            const maxCredit = Math.max(0, baseNetIncome * 10);
            
            const maxLimitEl = document.getElementById('maxLimit');
            if (maxLimitEl) {
                maxLimitEl.textContent = `$${maxCredit.toLocaleString()}`;
            }
            
            const freeLimitEl = document.getElementById('freeLimit');
            if (freeLimitEl) {
                // –°–≤–æ–±–æ–¥–Ω—ã–π –ª–∏–º–∏—Ç = –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç (–Ω–µ –≤—ã—á–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π –¥–æ–ª–≥)
                // –¢–µ–∫—É—â–∏–π –¥–æ–ª–≥ —É–∂–µ —É—á—Ç–µ–Ω –≤ —Ä–∞—Å—Ö–æ–¥–∞—Ö –∏ –ø–ª–∞—Ç–µ–∂–∞—Ö
                freeLimitEl.textContent = `$${maxCredit.toLocaleString()}`;
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–≤–æ–¥–æ–≤
            this.updateTransfersHistory();

            const historyCountEl = document.getElementById('historyCount');
            if (historyCountEl) {
                historyCountEl.textContent = this.data.transfers.length;
            }

            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
            if (recipientSelect && currentRecipient) {
                recipientSelect.value = currentRecipient;
            }
            if (amountInput && currentAmount) {
                amountInput.value = currentAmount;
            }
            if (creditAmountInput && currentCreditAmount) {
                creditAmountInput.value = currentCreditAmount;
            }

            console.log('üé® BankModuleV4: UI –æ–±–Ω–æ–≤–ª–µ–Ω');
            
        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI:', error);
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
     */
    initRecipientsList() {
        try {
            const recipientSelect = document.getElementById('recipientSelect');
            if (!recipientSelect) return;

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –≤—ã–±–æ—Ä
            const currentSelection = recipientSelect.value;

            // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫
            recipientSelect.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è</option>';

            // –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–æ–≤
            if (this.players && this.players.length > 0) {
                this.players.forEach((player, index) => {
                    if (player.name !== this.playerName) {
                        const option = document.createElement('option');
                        option.value = index;
                        option.textContent = player.name;
                        recipientSelect.appendChild(option);
                    }
                });
            }

            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±–æ—Ä, –µ—Å–ª–∏ –æ–Ω –≤—Å–µ –µ—â–µ –≤–∞–ª–∏–¥–µ–Ω
            if (currentSelection && recipientSelect.querySelector(`option[value="${currentSelection}"]`)) {
                recipientSelect.value = currentSelection;
            }

            console.log('üë• BankModuleV4: –°–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –æ–±–Ω–æ–≤–ª–µ–Ω');
        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π:', error);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
     */
    updateTransfersHistory() {
        try {
            const historyContainer = document.getElementById('transfersHistory');
            if (!historyContainer) return;
            
            // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            historyContainer.innerHTML = '';

            if (!this.data.transfers.length) {
                historyContainer.innerHTML = '<div class="transfer-empty">–ù–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π</div>';
                console.log('üìã BankModuleV4: –ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞');
                return;
            }

            // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö
            console.log(`üîç BankModuleV4: –ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è –∏–≥—Ä–æ–∫–∞ ${this.playerName}:`, this.data.transfers.map(t => ({
                from: t.from,
                to: t.to,
                sender: t.sender,
                recipient: t.recipient,
                amount: t.amount,
                reason: t.reason || t.description,
                playerName: this.playerName,
                fullTransfer: t
            })));

            // –§–∏–ª—å—Ç—Ä—É–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∑–∞–ø–∏—Å–∏
            const uniqueTransfers = this.data.transfers.filter((transfer, index, self) => {
                const key = `${transfer.amount}_${transfer.description || transfer.reason}_${transfer.timestamp}`;
                const isDuplicate = self.findIndex(t => 
                    `${t.amount}_${t.description || t.reason}_${t.timestamp}` === key
                ) !== index;
                
                // –ò—Å–∫–ª—é—á–∞–µ–º –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏ "—Å—Ç–∞—Ä—Ç–æ–≤—ã–µ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è"
                const isNegativeStartingSavings = (transfer.description || transfer.reason) === '—Å—Ç–∞—Ä—Ç–æ–≤—ã–µ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è' && 
                                                Number(transfer.amount) < 0;
                
                // –î–ª—è "—Å—Ç–∞—Ä—Ç–æ–≤—ã–µ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è" - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —Å—É–º–º—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
                const isStartingSavings = (transfer.description || transfer.reason) === '—Å—Ç–∞—Ä—Ç–æ–≤—ã–µ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è';
                const isStartingSavingsForCurrentPlayer = isStartingSavings && 
                    (transfer.to === this.playerName || transfer.recipient === this.playerName);
                const shouldShowStartingSavings = isStartingSavingsForCurrentPlayer && Number(transfer.amount) > 0;
                
                // –î–ª—è –æ–±—ã—á–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫ —Ç–µ–∫—É—â–µ–º—É –∏–≥—Ä–æ–∫—É
                const isRegularTransaction = !isStartingSavings;
                const isRegularTransactionForCurrentPlayer = isRegularTransaction && 
                    (transfer.from === this.playerName || transfer.to === this.playerName || 
                     transfer.sender === this.playerName || transfer.recipient === this.playerName);
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫ –∏–≥—Ä–æ–∫—É –ò–õ–ò —è–≤–ª—è—é—Ç—Å—è —Å—Ç–∞—Ä—Ç–æ–≤—ã–º–∏ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è–º–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
                // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã –¥–ª—è —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏
                const shouldShow = (isRegularTransactionForCurrentPlayer || shouldShowStartingSavings) && !isNegativeStartingSavings;
                
                if (isStartingSavings) {
                    console.log(`üîç –°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è: amount=${transfer.amount}, to=${transfer.to}, playerName=${this.playerName}, shouldShow=${shouldShow}, isStartingSavingsForCurrentPlayer=${isStartingSavingsForCurrentPlayer}, isDuplicate=${isDuplicate}, isNegativeStartingSavings=${isNegativeStartingSavings}, isRegularTransactionForCurrentPlayer=${isRegularTransactionForCurrentPlayer}`);
                }
                
                return shouldShow;
            });

            const orderedTransfers = [...uniqueTransfers].sort((a, b) => {
                const aTime = new Date(a?.timestamp || 0).getTime();
                const bTime = new Date(b?.timestamp || 0).getTime();
                return bTime - aTime;
            });

            orderedTransfers.forEach(transfer => {
                const transferEl = this.createTransferElement(transfer);
                historyContainer.appendChild(transferEl);
            });

            console.log(`üìã BankModuleV4: –ò—Å—Ç–æ—Ä–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ (${uniqueTransfers.length} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ ${this.data.transfers.length})`);
            
            // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
            const filteredOut = this.data.transfers.length - uniqueTransfers.length;
            if (filteredOut > 0) {
                console.log(`üîç BankModuleV4: –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ ${filteredOut} –∑–∞–ø–∏—Å–µ–π (–¥—É–±–ª–∏–∫–∞—Ç—ã, –Ω–µ –¥–ª—è –∏–≥—Ä–æ–∫–∞, –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è)`);
            }
            
        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏:', error);
        }
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–µ—Ä–µ–≤–æ–¥–∞
     */
    createTransferElement(transfer) {
        const element = document.createElement('div');
        element.className = 'transfer-item';

        const rawAmount = Number(transfer?.amount || 0);
        const type = transfer?.type || '';
        const from = transfer?.from || transfer?.sender || '–ë–∞–Ω–∫';
        const to = transfer?.to || transfer?.recipient || '';

        const isNotification = type === 'notification';
        const isCreditTake = type === 'credit_take';
        const isCreditRepay = type === 'credit_repay';

        const isReceived = isNotification
            ? rawAmount >= 0
            : to === this.playerName;
            
        // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π
        if ((transfer?.reason || transfer?.description) === '—Å—Ç–∞—Ä—Ç–æ–≤—ã–µ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è') {
            console.log('üîç –°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è:', {
                from,
                to,
                playerName: this.playerName,
                rawAmount,
                isReceived,
                type
            });
        }

        const amountClass = isReceived ? 'received' : 'sent';
        const absoluteAmount = Math.abs(rawAmount);
        const amountPrefix = isReceived ? '+' : '-';
        const displayAmount = `${amountPrefix}$${absoluteAmount.toLocaleString()}`;

        let description = transfer?.reason || transfer?.description || '';

        if (!description) {
            if (isCreditTake) {
                description = `–ö—Ä–µ–¥–∏—Ç –æ—Ç –±–∞–Ω–∫–∞`;
            } else if (isCreditRepay) {
                description = `–ü–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞`;
            } else if (isNotification) {
                description = isReceived ? '–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ' : '–°–ø–∏—Å–∞–Ω–∏–µ';
            } else if (isReceived) {
                description = `–ü–æ–ª—É—á–µ–Ω–æ –æ—Ç ${from}`;
            } else {
                description = `–ü–µ—Ä–µ–≤–æ–¥ ${to || '–ë–∞–Ω–∫'}`;
            }
        }

        const timeLabel = transfer?.timestamp ? this.formatTime(transfer.timestamp) : '‚Äî';

        element.innerHTML = `
            <div class="transfer-amount ${amountClass}">${displayAmount}</div>
            <div class="transfer-description">${description}</div>
            <div class="transfer-time">${timeLabel}</div>
        `;

        return element;
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
     */
    formatTime(timestamp) {
        const date = new Date(timestamp);
        if (Number.isNaN(date.getTime())) {
            return '‚Äî';
        }
        const now = new Date();
        const diff = now - date;
        
        if (diff < 60000) return '—Ç–æ–ª—å–∫–æ —á—Ç–æ';
        if (diff < 3600000) return `${Math.floor(diff / 60000)} –º–∏–Ω –Ω–∞–∑–∞–¥`;
        if (diff < 86400000) return `${Math.floor(diff / 3600000)} —á –Ω–∞–∑–∞–¥`;
        return date.toLocaleDateString();
    }

    /**
     * –ó–∞–ø—Ä–æ—Å –∫—Ä–µ–¥–∏—Ç–∞
     */
    async requestCredit(amount = 1000) {
        try {
            console.log(`üí∞ BankModuleV4: –ó–∞–ø—Ä–æ—Å –∫—Ä–µ–¥–∏—Ç–∞ –Ω–∞ $${amount} —á–µ—Ä–µ–∑ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä`);
            
            if (!this.playerName) {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏–º—è —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞');
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–∞–∑–æ–≤–æ–≥–æ PAYDAY (–±–µ–∑ —à—Ç—Ä–∞—Ñ–∞ –ø–æ –∫—Ä–µ–¥–∏—Ç—É)
            const childrenCount = this.getChildrenCount();
            const childrenExpenses = childrenCount * 400;
            const income = Number(this.data.income || 0);
            const passiveIncome = Number(this.data.passiveIncome || 0);
            const baseExpenses = this.getTotalExpenses() + childrenExpenses;
            const baseNetIncome = (income + passiveIncome) - baseExpenses;
            const maxCredit = Math.max(0, baseNetIncome * 10);
            
            if (amount > maxCredit) {
                throw new Error(`–ü—Ä–µ–≤—ã—à–µ–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç –∫—Ä–µ–¥–∏—Ç–∞. –ú–∞–∫—Å–∏–º—É–º: $${maxCredit.toLocaleString()}`);
            }

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä –±–∞–Ω–∫–∞
            const response = await this.makeApiRequest('/api/bank/credit/take', {
                method: 'POST',
                body: JSON.stringify({
                    username: this.playerName,
                    roomId: this.roomId,
                    amount: amount
                })
            });

            const result = await response.json();
            if (result?.error) {
                throw new Error(result.error);
            }
            if (result?.success === false) {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—Ä–µ–¥–∏—Ç');
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ (–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ)
            await this.loadData(true);

            console.log(`‚úÖ BankModuleV4: –ö—Ä–µ–¥–∏—Ç –Ω–∞ $${amount} –ø–æ–ª—É—á–µ–Ω`);
            return true;
            
        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫—Ä–µ–¥–∏—Ç–∞:', error);
            alert(`–û—à–∏–±–∫–∞: ${error.message}`);
            return false;
        }
    }

    /**
     * –ü–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞
     */
    async payoffCredit(amount = null) {
        try {
            console.log('üí∞ BankModuleV4: –ü–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞ —á–µ—Ä–µ–∑ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä');
            
            if (this.data.credit <= 0) {
                throw new Error('–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤');
            }

            if (!this.playerName) {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏–º—è —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞');
            }

            const payoffAmount = Number(amount || this.data.credit);
            if (!Number.isFinite(payoffAmount) || payoffAmount <= 0) {
                throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è');
            }

            const response = await this.makeApiRequest('/api/bank/credit/repay', {
                method: 'POST',
                body: JSON.stringify({
                    username: this.playerName,
                    roomId: this.roomId,
                    amount: payoffAmount
                })
            });

            const result = await response.json();
            if (result?.error) {
                throw new Error(result.error);
            }
            if (result?.success === false) {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–≥–∞—Å–∏—Ç—å –∫—Ä–µ–¥–∏—Ç');
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ (–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ)
            await this.loadData(true);

            console.log('‚úÖ BankModuleV4: –ö—Ä–µ–¥–∏—Ç –ø–æ–≥–∞—à–µ–Ω');
            return true;
            
        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞:', error);
            alert(`–û—à–∏–±–∫–∞: ${error.message}`);
            return false;
        }
    }

    /**
     * –ü–µ—Ä–µ–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤
     */
    async transferMoney(recipientRef, amount) {
        try {
            const numericAmount = Number(amount);
            console.log(`üí∏ BankModuleV4: –ü–µ—Ä–µ–≤–æ–¥ $${numericAmount} —á–µ—Ä–µ–∑ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä`);

            if (!Number.isFinite(numericAmount) || numericAmount <= 0) {
                throw new Error('–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞');
            }

            if (numericAmount > this.data.balance) {
                throw new Error('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤');
            }

            if (!this.playerName) {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏–º—è —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞');
            }

            let recipientName = recipientRef;
            if (typeof recipientRef === 'number') {
                recipientName = this.players?.[recipientRef]?.name;
            }

            if (!recipientName) {
                throw new Error('–ü–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }

            if (recipientName === this.playerName) {
                throw new Error('–ù–µ–ª—å–∑—è –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å–∞–º–æ–º—É —Å–µ–±–µ');
            }

            const response = await this.makeApiRequest('/api/bank/transfer', {
                method: 'POST',
                body: JSON.stringify({
                    from: this.playerName,
                    to: recipientName,
                    amount: numericAmount,
                    roomId: this.roomId
                })
            });

            const result = await response.json();
            if (result?.error) {
                throw new Error(result.error);
            }
            if (result?.success === false) {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥');
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ (–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ)
            await this.loadData(true);
            
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º UI
            this.updateUI();
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–≤–æ–¥–æ–≤
            await this.updateTransfersHistory();

            console.log(`‚úÖ BankModuleV4: –ü–µ—Ä–µ–≤–æ–¥ $${numericAmount} –≤—ã–ø–æ–ª–Ω–µ–Ω`);
            return true;
            
        } catch (error) {
            console.error('‚ùå BankModuleV4: –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞:', error);
            alert(`–û—à–∏–±–∫–∞: ${error.message}`);
            return false;
        }
    }

    /**
     * –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
     */
    startAutoSync() {
        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥ (—É–≤–µ–ª–∏—á–µ–Ω–æ —Å 5)
        this.syncInterval = setInterval(() => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ–º –ª–∏ –º—ã —É–∂–µ –¥–∞–Ω–Ω—ã–µ
            if (!this.isLoading) {
            this.loadData();
            } else {
                console.log('‚è≥ BankModuleV4: –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é - –∑–∞–≥—Ä—É–∑–∫–∞ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è');
            }
        }, 10000);
        
        console.log('üîÑ BankModuleV4: –ê–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞ (–∫–∞–∂–¥—ã–µ 10 —Å–µ–∫)');
    }

    /**
     * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
     */
    stopAutoSync() {
        if (this.syncInterval) {
            clearInterval(this.syncInterval);
            this.syncInterval = null;
            console.log('‚èπÔ∏è BankModuleV4: –ê–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
        }
    }

    /**
     * –û—Ç–∫—Ä—ã—Ç–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ –æ–∫–Ω–∞
     */
    openBank() {
        console.log('üè¶ BankModuleV4: openBank() –≤—ã–∑–≤–∞–Ω');
        const modal = document.getElementById('bankModal');
        console.log('üè¶ BankModuleV4: modal —ç–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω:', !!modal);
        if (modal) {
            console.log('üè¶ BankModuleV4: –¢–µ–∫—É—â–∏–π display:', modal.style.display);
            modal.style.display = 'flex';
            console.log('üè¶ BankModuleV4: –ù–æ–≤—ã–π display —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', modal.style.display);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —Ñ–æ–Ω—É –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
            modal.addEventListener('click', (e) => {
                if (e.target === modal) {
                    this.closeBank();
                }
            });
            
            console.log('üè¶ BankModuleV4: –ë–∞–Ω–∫ –æ—Ç–∫—Ä—ã—Ç');
        } else {
            console.error('‚ùå BankModuleV4: –≠–ª–µ–º–µ–Ω—Ç bankModal –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        }
    }

    /**
     * –ó–∞–∫—Ä—ã—Ç–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ –æ–∫–Ω–∞
     */
    closeBank() {
        const modal = document.getElementById('bankModal');
        if (modal) {
            modal.style.display = 'none';
            console.log('üè¶ BankModuleV4: –ë–∞–Ω–∫ –∑–∞–∫—Ä—ã—Ç');
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
     */
    getData() {
        // –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω DataStore –∏ –æ–Ω –≥–æ—Ç–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –∫–∞–∫ –∏—Å—Ç–æ—á–Ω–∏–∫ –∏—Å—Ç–∏–Ω—ã
        if (window.dataStore && window.dataStore.isReady()) {
            const dataStoreData = window.dataStore.getBankModuleData();
            console.log('üìä BankModuleV4: –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ DataStore', dataStoreData);
            return dataStoreData;
        }
        
        // Fallback –∫ –ª–æ–∫–∞–ª—å–Ω—ã–º –¥–∞–Ω–Ω—ã–º
        console.log('üìä BankModuleV4: –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫—ç—à–∞', this.data);
        return { ...this.data };
    }

    /**
     * –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –º–æ–¥—É–ª—è
     */
    destroy() {
        this.stopAutoSync();
        this.listeners.clear();
        console.log('üóëÔ∏è BankModuleV4: –ú–æ–¥—É–ª—å —É–Ω–∏—á—Ç–æ–∂–µ–Ω');
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
let bankModuleV4 = null;
let isInitializing = false;

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ User ID –∏–∑ localStorage (–≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è)
 */
function getUserIdFromStorage() {
    // 1. –ò–∑ localStorage (–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
    const userData = localStorage.getItem('user');
    if (userData) {
        try {
            const user = JSON.parse(userData);
            return user.id || user._id;
        } catch (e) {
            console.warn('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ user data:', e);
        }
    }
    
    // 2. –ò–∑ –¥—Ä—É–≥–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ localStorage
    return localStorage.getItem('userId') || localStorage.getItem('user_id');
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ –º–æ–¥—É–ª—è v4
 */
async function initBankModuleV4() {
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    if (bankModuleV4?.isInitialized) {
        console.log('‚úÖ BankModuleV4: –£–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return bankModuleV4;
    }
    
    if (isInitializing) {
        console.log('‚è≥ BankModuleV4: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è');
        return null;
    }

    isInitializing = true;
    
    try {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è BankModuleV4...');
        
        bankModuleV4 = new BankModuleV4();
        const success = await bankModuleV4.init();
        
        if (success) {
            console.log('‚úÖ BankModuleV4: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
            return bankModuleV4;
        } else {
            console.error('‚ùå BankModuleV4: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å');
            return null;
        }
    } catch (error) {
        console.error('‚ùå BankModuleV4: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
        return null;
    } finally {
        isInitializing = false;
    }
}

/**
 * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º Room ID
 */
async function forceInitBankModuleV4(roomId, userId) {
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    if (bankModuleV4?.isInitialized) {
        console.log('‚úÖ BankModuleV4: –£–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return bankModuleV4;
    }
    
    if (isInitializing) {
        console.log('‚è≥ BankModuleV4: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è');
        return null;
    }

    isInitializing = true;
    
    try {
        console.log('üöÄ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è BankModuleV4...', { roomId, userId });
        
        bankModuleV4 = new BankModuleV4();
        bankModuleV4.roomId = roomId;
        bankModuleV4.userId = userId;
        
        const success = await bankModuleV4.init();
        
        if (success) {
            console.log('‚úÖ BankModuleV4: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
            return bankModuleV4;
        } else {
            console.error('‚ùå BankModuleV4: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å');
            return null;
        }
    } catch (error) {
        console.error('‚ùå BankModuleV4: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
        return null;
    } finally {
        isInitializing = false;
    }
}

/**
 * –û—Ç–∫—Ä—ã—Ç–∏–µ –±–∞–Ω–∫–∞ v4
 */
async function openBankV4() {
    if (!bankModuleV4) {
        await initBankModuleV4();
    }
    
    if (bankModuleV4) {
        bankModuleV4.openBank();
    }
}

/**
 * –ó–∞–∫—Ä—ã—Ç–∏–µ –±–∞–Ω–∫–∞ v4
 */
function closeBankV4() {
    if (bankModuleV4) {
        bankModuleV4.closeBank();
    }
}

/**
 * –ó–∞–ø—Ä–æ—Å –∫—Ä–µ–¥–∏—Ç–∞ v4
 */
async function requestCreditV4(amount = 1000) {
    if (!bankModuleV4) {
        await initBankModuleV4();
    }
    
    if (bankModuleV4) {
        return await bankModuleV4.requestCredit(amount);
    }
    
    return false;
}

/**
 * –ü–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞ v4
 */
async function payoffCreditV4() {
    if (!bankModuleV4) {
        await initBankModuleV4();
    }
    
    if (bankModuleV4) {
        return await bankModuleV4.payoffCredit();
    }
    
    return false;
}

/**
 * –ü–µ—Ä–µ–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ v4
 */
async function transferMoneyV4(recipientIndex, amount) {
    console.log('üîÑ transferMoneyV4: –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥', { recipientIndex, amount });
    
    if (!bankModuleV4) {
        console.log('üîÑ transferMoneyV4: bankModuleV4 –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –ø—ã—Ç–∞–µ–º—Å—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å');
        await initBankModuleV4();
    }
    
    if (bankModuleV4) {
        console.log('üîÑ transferMoneyV4: bankModuleV4 –Ω–∞–π–¥–µ–Ω, –≤—ã–∑—ã–≤–∞–µ–º transferMoney');
        return await bankModuleV4.transferMoney(recipientIndex, amount);
    }
    
    console.log('‚ùå transferMoneyV4: bankModuleV4 –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
    return false;
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö v4
 */
function getBankDataV4() {
    if (bankModuleV4) {
        return bankModuleV4.getData();
    }
    return null;
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å
window.initBankModuleV4 = initBankModuleV4;
window.forceInitBankModuleV4 = forceInitBankModuleV4;
window.openBankV4 = openBankV4;
window.closeBankV4 = closeBankV4;
window.requestCreditV4 = requestCreditV4;
window.payoffCreditV4 = payoffCreditV4;
window.transferMoneyV4 = transferMoneyV4;
window.payoffLoan = (loanType) => {
    if (window.bankModuleV4) {
        window.bankModuleV4.payoffLoan(loanType);
    } else {
        console.error('BankModuleV4 –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∏–∑ —Ñ–æ—Ä–º—ã
async function executeTransferV4() {
    try {
        console.log('üîÑ executeTransferV4: –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥');
        
        const recipientSelect = document.getElementById('recipientSelect');
        const amountInput = document.getElementById('transferAmount');
        
        console.log('üîç executeTransferV4: –≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã:', { recipientSelect: !!recipientSelect, amountInput: !!amountInput });
        
        if (!recipientSelect || !amountInput) {
            throw new Error('–≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        }
        
        const recipientIndex = parseInt(recipientSelect.value);
        const amount = parseFloat(amountInput.value);
        
        console.log('üîç executeTransferV4: –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', { recipientIndex, amount });
        
        if (recipientIndex === null || recipientIndex === undefined || !amount) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏ —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É');
            return;
        }
        
        if (amount <= 0) {
            alert('–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π');
            return;
        }
        
        console.log('üîÑ executeTransferV4: –í—ã–∑—ã–≤–∞–µ–º transferMoneyV4');
        const success = await transferMoneyV4(recipientIndex, amount);
        console.log('üîç executeTransferV4: –†–µ–∑—É–ª—å—Ç–∞—Ç transferMoneyV4:', success);
        
        if (success) {
            // –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—É–º–º—É, –æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è
            amountInput.value = '';
            
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
            if (bankModuleV4) {
                console.log('üîÑ executeTransferV4: –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ');
                await bankModuleV4.loadData(true);
                bankModuleV4.updateUI();
                await bankModuleV4.updateTransfersHistory();
            }
            
            // alert('–ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!'); // –£–±—Ä–∞–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        } else {
            alert('–ü–µ—Ä–µ–≤–æ–¥ –Ω–µ —É–¥–∞–ª—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.');
        }
        
    } catch (error) {
        console.error('‚ùå executeTransferV4: –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞:', error);
        alert(`–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: ${error.message}`);
    }
}

window.executeTransferV4 = executeTransferV4;

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞
async function takeCreditV4() {
    try {
        const amountInput = document.getElementById('creditAmount');
        const amount = parseFloat(amountInput?.value) || 1000;
        
        if (amount <= 0) {
            alert('–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π');
            return;
        }
        
        const success = await requestCreditV4(amount);
        if (success) {
            alert(`–ö—Ä–µ–¥–∏—Ç $${amount} –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!`);
        }
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞:', error);
        alert(`–û—à–∏–±–∫–∞: ${error.message}`);
    }
}

async function payoffCreditV4Button() {
    try {
        // –í—ã–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–≥–∞—à–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é
        if (!bankModuleV4) {
            await initBankModuleV4();
        }
        
        if (bankModuleV4) {
            const success = await bankModuleV4.payoffCredit();
            if (success) {
                alert('–ö—Ä–µ–¥–∏—Ç –ø–æ–≥–∞—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
            }
        } else {
            alert('–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –º–æ–¥—É–ª—å –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        }
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞:', error);
        alert(`–û—à–∏–±–∫–∞: ${error.message}`);
    }
}

window.takeCreditV4 = takeCreditV4;
window.payoffCreditV4 = payoffCreditV4Button;
window.getBankDataV4 = getBankDataV4;

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', () => {
    console.log('üìÑ DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è BankModuleV4...');
    
    // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    console.log('üîç –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:');
    console.log('URL:', window.location.href);
    console.log('URL params:', new URLSearchParams(window.location.search));
    console.log('window.currentRoomId:', window.currentRoomId);
    console.log('window.roomId:', window.roomId);
    
    // –ü—Ä–æ–±—É–µ–º –æ–±—ã—á–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    initBankModuleV4().then(result => {
        if (!result) {
            // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å, –∂–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –∏ –ø—Ä–æ–±—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
            setTimeout(async () => {
                const roomId = window.gameState?.roomId || window.gameState?.state?.roomId;
                const userId = getUserIdFromStorage(); // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π user_id
                
                if (userId) {
                    console.log('üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...', { roomId, userId });
                    await forceInitBankModuleV4(roomId, userId);
                } else {
                    console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å User ID –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
                }
            }, 2000);
        }
    });
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π
window.toggleIncomeDetails = function() {
    if (bankModuleV4) {
        bankModuleV4.toggleIncomeDetails();
    }
};

window.toggleExpensesDetails = function() {
    if (bankModuleV4) {
        bankModuleV4.toggleExpensesDetails();
    }
};

console.log('üè¶ BankModuleV4 –∑–∞–≥—Ä—É–∂–µ–Ω');
